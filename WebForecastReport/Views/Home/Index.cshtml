@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Home";
}
<style>
    .highlight {
        font-weight: bold;
    }

    .dataTables_scrollHeadInner, .table {
        width: 100% !important;
    }
</style>
<div class="row pt-3">
    <div class="col-md-12 col-xl-12">
        <ul class="nav nav-tabs pb-2" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link active" id="tab_a" data-toggle="tab" href="#dashboard_a" role="tab" aria-controls="dashboard_a" aria-selected="true">
                    <b>Dashboard Individual</b>
                </a>
            </li>            
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="tab_c" data-toggle="tab" href="#dashboard_c" role="tab" aria-controls="dashboard_c" aria-selected="false">
                    <b>Dashboard Department</b>
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="tab_b" data-toggle="tab" href="#dashboard_b" role="tab" aria-controls="dashboard_b" aria-selected="false">
                    <b>Performance</b>
                </a>
            </li>
        </ul>
    </div>
    <div class="tab-content container-fluid" id="myTabContent">
        <div class="tab-pane fade show active " id="dashboard_a" role="tabpanel" aria-labelledby="home-tab">
            <div class="row pt-3">
                <div class="col-md-6 col-xl-6">
                    <div class="row">
                        <div class="col-md-3 col-xl-3 pb-3">
                            <select id="years_dashboard" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-4 col-xl-4 pb-3">
                            <select id="sale_name" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-3 col-xl-3 pb-4">
                            <button type="button" id="btn_OK" class="btn btn-primary form-control">OK</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-xl-12">
                    <div class="row">
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Type-Hitting Rate</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div class="w-100" id="pie_chart_type" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <canvas id="chart_hitting_rate" style="width:250px;height:250px"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Won-Lost</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_won" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_lost" style="width:100%;height:250px"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">No go - Pending</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_nogo" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_pending" style="width:100%;height:250px"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 col-xl-12">
                    <div class="row">
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Stages</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-12 col-xl-12">
                                            <div id="pie_chart_stages"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 col-xl-8">
                            <div class="card bg-dark " style="height:auto">
                                <div class="card-header">
                                    <span class="card-title">Last Update</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6 col-xl-6 pt-3">
                                            <div class="w-100">
                                                <canvas id="bar_chart_stages" style="height:450px"></canvas>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-xl-6 pt-2">
                                            <div style="overflow:auto; height:500px">
                                                <table id="table_stages" class="table table-sm cell-border  table-dark  table-bordered display responsive nowrap" style="width:100%;">
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="dashboard_b" role="tabpanel" aria-labelledby="home-tab">
            <div class="row pt-3">
                <div class="col-md-6 col-xl-6">
                    <div class="row">
                        <div class="col-md-3 col-xl-3 pb-3">
                            <select id="years_performance" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-4 col-xl-4 pb-3">
                            <select id="departments" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-3 col-xl-3 pb-4">
                            <button type="button" id="btn_performance_OK" class="btn btn-primary form-control">OK</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-xl-12 pt-2">
                    <div class="row">
                        <div class="col-md-6 col-xl-6">
                            <div class="card bg-dark text-light" style="height:500px">
                                <div class="card-header">
                                    <span class="card-title">Performance</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-12 col-xl-12">
                                            <div class="w-100 h-100">
                                                <canvas id="performance_bar"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-xl-6">
                            <div class="card bg-dark" style="height:500px">
                                <div class="card-header">
                                    <span class="card-title"></span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-12 col-xl-12">
                                            <div class="W-100 h-100" style="overflow:auto;">
                                                <table id="table_performance_stack" class="table table-sm cell-border  table-dark  table-bordered display responsive nowrap" style="width:100%;">
                                                    <thead class="text-center" style="background-color:#0F8DF6;color:black">
                                                        <tr>
                                                            <th style="text-align:center;">Sales Name</th>
                                                            <th style="text-align:center;">Target (MB)</th>
                                                            <th style="text-align:center;">Actual (MB)</th>
                                                            <th style="text-align:center;">Actual (%)</th>
                                                        </tr>
                                                    </thead>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-xl-12 pt-2">
                    <div class="card bg-dark" style="height:500px">
                        <div class="card-header">
                            <span class="card-title"></span>
                        </div>
                        <div class="card-body">
                            <div style="overflow:auto; height:400px">
                                <table id="table_performance" class="table table-sm cell-border  table-dark  table-bordered display responsive nowrap" style="width:100%;">
                                    <thead class="text-center" style="background-color:#0F8DF6;color:black">
                                        <tr>
                                            <th rowspan="2" style="text-align:center;vertical-align:middle">Department</th>
                                            <th rowspan="2" style="text-align:center;vertical-align:middle">Sale Name</th>
                                            <th colspan="2" style="text-align:center;">Project(MB)</th>
                                            <th colspan="2" style="text-align:center;">Product(MB)</th>
                                            <th colspan="2" style="text-align:center;">Service(MB)</th>
                                            <th colspan="3" style="text-align:center;">Sales Total(MB)</th>
                                        </tr>
                                        <tr>
                                            <th style="text-align:center;">Target</th>
                                            <th style="text-align:center;">Actual</th>
                                            <th style="text-align:center;">Target</th>
                                            <th style="text-align:center;">Actual</th>
                                            <th style="text-align:center;">Target</th>
                                            <th style="text-align:center;">Actual</th>
                                            <th style="text-align:center;">Target</th>
                                            <th style="text-align:center;">Actual</th>
                                            <th style="text-align:center;">%</th>
                                        </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="dashboard_c" role="tabpanel" aria-labelledby="home-tab">
            <div class="row pt-3">
                <div class="col-md-6 col-xl-6">
                    <div class="row">
                        <div class="col-md-3 col-xl-3 pb-3">
                            <select id="years_dashboard_department" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-4 col-xl-4 pb-3">
                            <select id="department_name" class="form-control">
                            </select>
                        </div>
                        <div class="col-md-3 col-xl-3 pb-4">
                            <button type="button" id="btn_department_OK" class="btn btn-primary form-control">OK</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-xl-12">
                    <div class="row">
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Type-Hitting Rate</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div class="w-100" id="pie_chart_type_department" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <canvas id="chart_hitting_rate_department" style="width:250px;height:250px"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Won - Lost</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_won_department" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_lost_department" style="width:100%;height:250px"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">No go - Pending</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_nogo_department" style="width:100%;height:250px"></div>
                                        </div>
                                        <div class="col-xl-12 d-flex justify-content-center">
                                            <div id="pie_chart_pending_department" style="width:100%;height:250px"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 col-xl-12">
                    <div class="row">
                        <div class="col-md-4 col-xl-4">
                            <div class="card bg-dark" style="height:600px">
                                <div class="card-header">
                                    <span class="card-title">Stages</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-12 col-xl-12">
                                            <div id="pie_chart_stages_department"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 col-xl-8">
                            <div class="card bg-dark " style="height:auto">
                                <div class="card-header">
                                    <span class="card-title">Last Update</span>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6 col-xl-6 pt-3">
                                            <div class="w-100">
                                                <canvas id="bar_chart_stages_department" style="height:450px"></canvas>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-xl-6 pt-2">
                                            <div style="overflow:auto; height:500px">
                                                <table id="table_stages_department" class="table table-sm cell-border  table-dark  table-bordered display responsive nowrap" style="width:100%;">
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var Years = [];
        var Sales = [];
        var Departments = [];
        var Role = "";
        var Datas = [];
        var Data_Stages = [];
        var Data_Stages_Day = [];
   
        var pie_chart_type;
        var pie_chart_won;
        var bar_chart_stages;     
       
        var DataLastUpdateDepartment = [];
        var last_dashboard_deprtment_index = 0;
        var last_perfomance_deprtment_index = 0;
        $(document).ready(function () {
            init();
        });

        function init(){
            var year = '@DateTime.Now.ToString("yyyy")';
            var name = '@Model.name';
            var role = '@Model.role';
            var department = '@Model.department';
            Role = role;
            $.ajax({
                url: '@Url.Action("GetUserDepartment", "Home")',
                type: "post",
                contentType: 'application/x-www-form-urlencoded',
                data: {
                    year,name,department, role
                },
                success: function (response) {
                    Years = add_year(response.years);
                    Sales = add_sale(response.sales);
                    Departments = add_department(response.departments);

                    initSale(role,Sales);
                    initYearDashboard(Years);
                    //draw pie chart
                    var name = document.getElementById("sale_name").value;
                    pie_chart_data(year,name);
                }
            });
        };

        $('#btn_OK').on('click', function () {
            $("#table_stages").empty();
             var name = document.getElementById("sale_name").value;
             var year = document.getElementById("years_dashboard").value;
             pie_chart_data(year,name);
        });

        $('#tab_b').on('click',function(){
             initDepartment(Role,Departments);
             initYearPerformance(Years);
        });

        $('#tab_c').on('click',function(){
             initDashboardDepartment(Role,Departments);
             initYearDashboardDepartment(Years);
        });

        $('#btn_performance_OK').on('click',function(){
            var year = document.getElementById("years_performance").value;
            var department = document.getElementById("departments").value;
            last_perfomance_deprtment_index = document.getElementById("departments").selectedIndex;
            $.ajax({
                url: '@Url.Action("GetDataPerformance", "Home")',
                type: "post",
                contentType: 'application/x-www-form-urlencoded',
                data: {
                    year,department
                },
                success: function (response) {

                    UpdatePerformanceStack(response.performances_stack);
                    initPerformanceStack(response.performances_stack);

                    var datas = response.performances;
                    var dataSet = [];
                    for (var i = 0; i < datas.length; i++) {
                           var sum_target = (parseFloat(datas[i].product_target) + parseFloat(datas[i].project_target) +  parseFloat(datas[i].service_target)).toFixed(3);
                           var sum_actual = (parseFloat(datas[i].product_actual) + parseFloat(datas[i].project_actual) +  parseFloat(datas[i].service_actual)).toFixed(3);
                           var percent = ((sum_actual / sum_target) * 100).toFixed(2);
                           var data = [
                               datas[i].department,
                               datas[i].sale_name,
                               datas[i].project_target,
                               datas[i].project_actual,
                               datas[i].product_target,
                               datas[i].product_actual,
                               datas[i].service_target,
                               datas[i].service_actual,
                               sum_target,sum_actual,
                               percent
                               ];

                           dataSet.push(data);
                       }
                    tablePerformance(dataSet);
                }
            });
        });

        $('#btn_department_OK').on('click',function(){
            $("#table_stages_department").empty();
            var department = document.getElementById("department_name").value;
            var year = document.getElementById("years_dashboard_department").value;
            chart_data_department(year,department);
            last_dashboard_deprtment_index = document.getElementById("department_name").selectedIndex;
        });

        function initSale(role,Sales){
            $('#sale_name').empty();
            var name = '@Model.name';
            var selectsale = document.getElementById('sale_name');
            if (role == "Admin"){               
                for (var i = 0, l = Sales.length; i < l; i++) {
                     var option = Sales[i];
                     selectsale.options.add(new Option(option.text, option.value, option.selected));
                }
                document.getElementById('sale_name').selectedIndex = 0;
            }else if (role != "Admin" && role != "" && role != null){     
                for (var i = 0, l = Sales.length; i < l; i++) {
                     var option = Sales[i];
                     selectsale.options.add(new Option(option.text, option.value, option.selected));
                }
                var index_sale = Sales.map(function (e) { return e.value; }).indexOf(name);
                document.getElementById('sale_name').selectedIndex = index_sale;         
            }else{               
                selectsale.options.add(new Option(name, name, null));
                document.getElementById('sale_name').selectedIndex = 0;
            }

        };
        function initDepartment(role,Departments){
            //Department
            $('#departments').empty();
            if(role == "Admin"){
                  var selectdepartment = document.getElementById('departments');
                for (var i = 0, l = Departments.length; i < l; i++) {
                 var option = Departments[i];
                 selectdepartment.options.add(new Option(option.text, option.value, option.selected));
                }
                document.getElementById('departments').selectedIndex = last_perfomance_deprtment_index;

            }else{
                  var selectdepartment = document.getElementById('departments');
                  selectdepartment.options.add(new Option(Departments[0].text, Departments[0].value, null));
                  document.getElementById('departments').selectedIndex = last_perfomance_deprtment_index;
            }
        };
        function initDashboardDepartment(role,Departments){
            //Department
            $('#department_name').empty();
            if(role == "Admin"){
                  var selectdepartment = document.getElementById('department_name');
                  selectdepartment.options.add(new Option("ALL", "ALL", true));
                for (var i = 0, l = Departments.length; i < l; i++) {
                    var option = Departments[i];
                    selectdepartment.options.add(new Option(option.text, option.value, option.selected));
                }
                document.getElementById('department_name').selectedIndex = last_dashboard_deprtment_index;

            }else{
                  var selectdepartment = document.getElementById('department_name');
                  selectdepartment.options.add(new Option(Departments[0].text, Departments[0].value, null));
                  document.getElementById('department_name').selectedIndex = last_dashboard_deprtment_index;
            }
        };

        function initYearDashboard(Years){
            //Year
            $('#years_dashboard').empty();
            var selectyear = document.getElementById('years_dashboard');
            for (var i = 0, l = Years.length; i < l; i++) {
                 var option = Years[i];
                 selectyear.options.add(new Option(option.text, option.value, option.selected));
            }
            document.getElementById('years_dashboard').selectedIndex = 0;
        };

        function initYearDashboardDepartment(Years){
            //Year
            $('#years_dashboard_department').empty();
            var selectyear = document.getElementById('years_dashboard_department');
            for (var i = 0, l = Years.length; i < l; i++) {
                 var option = Years[i];
                 selectyear.options.add(new Option(option.text, option.value, option.selected));
            }
            document.getElementById('years_dashboard_department').selectedIndex = 0;
        };


        function initYearPerformance(Years){
            //Year
            $('#years_performance').empty();
            var selectyear = document.getElementById('years_performance');
            for (var i = 0, l = Years.length; i < l; i++) {
                 var option = Years[i];
                 selectyear.options.add(new Option(option.text, option.value, option.selected));
            }
            document.getElementById('years_performance').selectedIndex = 0;
        };

       
        function pie_chart_data(year,name){
            $.ajax({
                 url: '@Url.Action("GetData", "Home")',
                 type: "post",
                 contentType: 'application/x-www-form-urlencoded',
                 data: {
                     year,name
                 },
                 success: function (response) {
                     Datas = response.datas;
                     Data_Stages = response.stages;
                     Data_Stages_Day = response.day;
                     var Hitting_Rates = response.hittingrates;

                     var product = "0";
                     var project = "0";
                     var service = "0";

                     var _product = Datas.find(x => x.type === "Product" && x.stages === "");
                     var _project = Datas.find(x => x.type === "Project" && x.stages === "");
                     var _service = Datas.find(x => x.type === "Service" && x.stages === "");
                     if (typeof _product !== 'undefined') {
                         product = _product.mb;
                     }
                     if (typeof _project !== 'undefined') {
                         project = _project.mb;
                     }
                     if (typeof _service !== 'undefined') {
                         service = _service.mb;
                     }
                     UpdatePieChartType(product,project,service,"pie_chart_type");

                     // draw Won
                     var won_product = "0";
                     var won_project = "0";
                     var won_service = "0";

                     var _won_product = Datas.find(x => x.type === "Product" && x.stages === "Closed(Won)");
                     var _won_project = Datas.find(x => x.type === "Project" && x.stages === "Closed(Won)");
                     var _won_service = Datas.find(x => x.type === "Service" && x.stages === "Closed(Won)");


                     if (typeof _won_product !== 'undefined') {
                         won_product = _won_product.mb;
                     }
                     if (typeof _won_project !== 'undefined') {
                         won_project = _won_project.mb;
                     }
                     if (typeof _won_service !== 'undefined') {
                         won_service = _won_service.mb;
                     }
                     UpdatePieChartWon(won_product,won_project,won_service,"pie_chart_won");

                     //draw lost
                     var lost_product = "0";
                     var lost_project = "0";
                     var lost_service = "0";

                     var _lost_product = Datas.find(x => x.type === "Product" && x.stages === "Closed(Lost)");
                     var _lost_project = Datas.find(x => x.type === "Project" && x.stages === "Closed(Lost)");
                     var _lost_service = Datas.find(x => x.type === "Service" && x.stages === "Closed(Lost)");

                     if (typeof _lost_product !== 'undefined') {
                         lost_product = _lost_product.mb;
                     }
                     if (typeof _lost_project !== 'undefined') {
                         lost_project = _lost_project.mb;
                     }
                     if (typeof _lost_service !== 'undefined') {
                         lost_service = _lost_service.mb;
                     }
                     UpdatePieChartLost(lost_product,lost_project,lost_service,"pie_chart_lost");

                     // draw nogo
                     var nogo_product = "0";
                     var nogo_project = "0";
                     var nogo_service = "0";

                     var _nogo_product = Datas.find(x => x.type === "Product" && x.stages === "No go");
                     var _nogo_project = Datas.find(x => x.type === "Project" && x.stages === "No go");
                     var _nogo_service = Datas.find(x => x.type === "Service" && x.stages === "No go");

                     if (typeof _nogo_product !== 'undefined') {
                         nogo_product = _nogo_product.mb;
                     }
                     if (typeof _nogo_project !== 'undefined') {
                         nogo_project = _nogo_project.mb;
                     }
                     if (typeof _nogo_service !== 'undefined') {
                         nogo_service = _nogo_service.mb;
                     }
                     UpdatePieChartNogo(nogo_product,nogo_project,nogo_service,"pie_chart_nogo");

                     //draw pending

                     var pending_product = "0";
                     var pending_project = "0";
                     var pending_service = "0";

                     var _pending_product = Datas.find(x => x.type === "Product" && x.stages === "Pending");
                     var _pending_project = Datas.find(x => x.type === "Project" && x.stages === "Pending");
                     var _pending_service = Datas.find(x => x.type === "Service" && x.stages === "Pending");

                     if (typeof _pending_product !== 'undefined') {
                         pending_product = _pending_product.mb;
                     }
                     if (typeof _pending_project !== 'undefined') {
                         pending_project = _pending_project.mb;
                     }
                     if (typeof _pending_service !== 'undefined') {
                         pending_service = _pending_service.mb;
                     }
                     UpdatePieChartPending(pending_product,pending_project,pending_service,"pie_chart_pending");

                     // draw all stages
                     var stages_won = "0";
                     var stages_lost = "0";
                     var stages_negotiation_review = "0";
                     var stages_nogo = "0";
                     var stages_quote_for_budget = "0";
                     var stages_proposal = "0";
                     var stages_prospectng = "0";

                     var _stages_won = Data_Stages.find(x => x.stages === "Closed(Won)");
                     var _stages_lost = Data_Stages.find(x => x.stages === "Closed(Lost)");
                     var _stages_negotiation_review = Data_Stages.find(x => x.stages === "Negotiation/Review");
                     var _stages_nogo = Data_Stages.find(x => x.stages === "No go");
                     var _stages_quote_for_budget = Data_Stages.find(x => x.stages === "Quote for Budget");
                     var _stages_proposal = Data_Stages.find(x => x.stages === "Proposal/Quote for Order");
                     var _stages_prospectng = Data_Stages.find(x => x.stages === "Prospecting");

                     if (typeof _stages_won !== 'undefined') {
                         stages_won = _stages_won.mb;
                     }
                     if (typeof _stages_lost !== 'undefined') {
                         stages_lost = _stages_lost.mb;
                     }
                     if (typeof _stages_negotiation_review !== 'undefined') {
                         stages_negotiation_review = _stages_negotiation_review.mb;
                     }
                     if (typeof _stages_nogo !== 'undefined') {
                         stages_nogo = _stages_nogo.mb;
                     }
                     if (typeof _stages_quote_for_budget !== 'undefined') {
                         stages_quote_for_budget = _stages_quote_for_budget.mb;
                     }
                     if (typeof _stages_proposal !== 'undefined') {
                         stages_proposal = _stages_proposal.mb;
                     }
                     if (typeof _stages_prospectng !== 'undefined') {
                         stages_prospectng = _stages_prospectng.mb;
                     }
                     UpdatePieChartStages(stages_quote_for_budget,stages_negotiation_review,stages_proposal,
                     stages_prospectng,stages_won,stages_lost,stages_nogo,"pie_chart_stages");                   
                                        
                     PopulateDataBarChart(Data_Stages_Day);
                     UpdateChartHittingRateIndividual(Hitting_Rates,"chart_hitting_rate");
                 }
             });           
        };

        function chart_data_department(year,department){
            $.ajax({
                 url: '@Url.Action("GetDataDepartment", "Home")',
                 type: "post",
                 contentType: 'application/x-www-form-urlencoded',
                 data: {
                     year,department
                 },
                 success: function (response) {
                     Datas = response.datas;
                     Data_Stages = response.stages;
                     DataLastUpdateDepartment = response.day;
                     var Hitting_Rates = response.hittingrates;
                    
                     // type
                     var product_department = "0";
                     var project_department = "0";
                     var service_department = "0";

                     var _product = Datas.find(x => x.type === "Product" && x.stages === "");
                     var _project = Datas.find(x => x.type === "Project" && x.stages === "");
                     var _service = Datas.find(x => x.type === "Service" && x.stages === "");
                     if (typeof _product !== 'undefined') {
                         product_department = _product.mb;
                     }
                     if (typeof _project !== 'undefined') {
                         project_department = _project.mb;
                     }
                     if (typeof _service !== 'undefined') {
                         service_department = _service.mb;
                     }
                     UpdatePieChartType(product_department,project_department,service_department,"pie_chart_type_department");
                    
                     // draw Won

                     var won_product = "0";
                     var won_project = "0";
                     var won_service = "0";

                     var _won_product = Datas.find(x => x.type === "Product" && x.stages === "Closed(Won)");
                     var _won_project = Datas.find(x => x.type === "Project" && x.stages === "Closed(Won)");
                     var _won_service = Datas.find(x => x.type === "Service" && x.stages === "Closed(Won)");


                     if (typeof _won_product !== 'undefined') {
                         won_product = _won_product.mb;
                     }
                     if (typeof _won_project !== 'undefined') {
                         won_project = _won_project.mb;
                     }
                     if (typeof _won_service !== 'undefined') {
                         won_service = _won_service.mb;
                     }
                     UpdatePieChartWon(won_product,won_project,won_service,"pie_chart_won_department");

                     //draw lost

                     var lost_product = "0";
                     var lost_project = "0";
                     var lost_service = "0";

                     var _lost_product = Datas.find(x => x.type === "Product" && x.stages === "Closed(Lost)");
                     var _lost_project = Datas.find(x => x.type === "Project" && x.stages === "Closed(Lost)");
                     var _lost_service = Datas.find(x => x.type === "Service" && x.stages === "Closed(Lost)");

                     if (typeof _lost_product !== 'undefined') {
                         lost_product = _lost_product.mb;
                     }
                     if (typeof _lost_project !== 'undefined') {
                         lost_project = _lost_project.mb;
                     }
                     if (typeof _lost_service !== 'undefined') {
                         lost_service = _lost_service.mb;
                     }
                     UpdatePieChartLost(lost_product,lost_project,lost_service,"pie_chart_lost_department");
                    
                     // draw nogo

                     var nogo_product = "0";
                     var nogo_project = "0";
                     var nogo_service = "0";

                     var _nogo_product = Datas.find(x => x.type === "Product" && x.stages === "No go");
                     var _nogo_project = Datas.find(x => x.type === "Project" && x.stages === "No go");
                     var _nogo_service = Datas.find(x => x.type === "Service" && x.stages === "No go");

                     if (typeof _nogo_product !== 'undefined') {
                         nogo_product = _nogo_product.mb;
                     }
                     if (typeof _nogo_project !== 'undefined') {
                         nogo_project = _nogo_project.mb;
                     }
                     if (typeof _nogo_service !== 'undefined') {
                         nogo_service = _nogo_service.mb;
                     }
                     UpdatePieChartNogo(nogo_product,nogo_project,nogo_service,"pie_chart_nogo_department");

                     //draw pending

                     var pending_product = "0";
                     var pending_project = "0";
                     var pending_service = "0";

                     var _pending_product = Datas.find(x => x.type === "Product" && x.stages === "Pending");
                     var _pending_project = Datas.find(x => x.type === "Project" && x.stages === "Pending");
                     var _pending_service = Datas.find(x => x.type === "Service" && x.stages === "Pending");

                     if (typeof _pending_product !== 'undefined') {
                         pending_product = _pending_product.mb;
                     }
                     if (typeof _pending_project !== 'undefined') {
                         pending_project = _pending_project.mb;
                     }
                     if (typeof _pending_service !== 'undefined') {
                         pending_service = _pending_service.mb;
                     }
                     UpdatePieChartPending(pending_product,pending_project,pending_service,"pie_chart_pending_department");

                       // draw all stages
                     var stages_won = "0";
                     var stages_lost = "0";
                     var stages_negotiation_review = "0";
                     var stages_nogo = "0";
                     var stages_quote_for_budget = "0";
                     var stages_proposal = "0";
                     var stages_prospectng = "0";

                     var _stages_won = Data_Stages.find(x => x.stages === "Closed(Won)");
                     var _stages_lost = Data_Stages.find(x => x.stages === "Closed(Lost)");
                     var _stages_negotiation_review = Data_Stages.find(x => x.stages === "Negotiation/Review");
                     var _stages_nogo = Data_Stages.find(x => x.stages === "No go");
                     var _stages_quote_for_budget = Data_Stages.find(x => x.stages === "Quote for Budget");
                     var _stages_proposal = Data_Stages.find(x => x.stages === "Proposal/Quote for Order");
                     var _stages_prospectng = Data_Stages.find(x => x.stages === "Prospecting");

                     if (typeof _stages_won !== 'undefined') {
                         stages_won = _stages_won.mb;
                     }
                     if (typeof _stages_lost !== 'undefined') {
                         stages_lost = _stages_lost.mb;
                     }
                     if (typeof _stages_negotiation_review !== 'undefined') {
                         stages_negotiation_review = _stages_negotiation_review.mb;
                     }
                     if (typeof _stages_nogo !== 'undefined') {
                         stages_nogo = _stages_nogo.mb;
                     }
                     if (typeof _stages_quote_for_budget !== 'undefined') {
                         stages_quote_for_budget = _stages_quote_for_budget.mb;
                     }
                     if (typeof _stages_proposal !== 'undefined') {
                         stages_proposal = _stages_proposal.mb;
                     }
                     if (typeof _stages_prospectng !== 'undefined') {
                         stages_prospectng = _stages_prospectng.mb;
                     }
                     UpdatePieChartStages(stages_quote_for_budget,stages_negotiation_review,stages_proposal,
                     stages_prospectng,stages_won,stages_lost,stages_nogo,"pie_chart_stages_department");       
                    
                     //hitting rate
                     UpdateChartHittingRateDepartment(Hitting_Rates,"chart_hitting_rate_department");

                     //stack bar
                     UpdateDepartmentStack(DataLastUpdateDepartment);
                 
                 }
             });           
        };

        function UpdatePieChartType(product,project,service,chart_name){
           var sum = parseFloat(product) + parseFloat(project) + parseFloat(service);
           var percent_product = (parseFloat(product) / sum  * 100).toFixed(2);
           var percent_project = (parseFloat(project) / sum  * 100).toFixed(2);
           var percent_service = (parseFloat(service) / sum  * 100).toFixed(2);
           var datas = [
			        {y: product, percent:percent_product, label: "Product", legendText: "Product", color:"#41384D"},
			        {y: project,percent:percent_project, label: "Project", legendText: "Project", color:"#725A7A"},
			        {y: service,percent:percent_service, label: "Service", legendText: "Service", color:"#B8AAC3"},
		            ];

            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart_type = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "Type",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 240,
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            }
            });
            pie_chart_type.render();           
        };

        function UpdatePieChartWon(won_product,won_project,won_service,chart_name) {
           var sum = parseFloat(won_product) + parseFloat(won_project) + parseFloat(won_service);
           var percent_won_product = (parseFloat(won_product) / sum  * 100).toFixed(2);
           var percent_won_project = (parseFloat(won_project) / sum  * 100).toFixed(2);
           var percent_won_service = (parseFloat(won_service) / sum  * 100).toFixed(2);
           var datas = [
			        {y: won_product, percent:percent_won_product, label: "Product", legendText: "Product", color:"#205D5E"},
			        {y: won_project,percent:percent_won_project, label: "Project", legendText: "Project", color:"#3F7857"},
			        {y: won_service,percent:percent_won_service, label: "Service", legendText: "Service", color:"#7EC384"},
		            ];
            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "Won",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 240,
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            }
            });
            pie_chart.render();
        };
     
        function UpdatePieChartLost(lost_product,lost_project,lost_service,chart_name) {
           var sum = parseFloat(lost_product) + parseFloat(lost_project) + parseFloat(lost_service);
           var percent_lost_product = (parseFloat(lost_product) / sum  * 100).toFixed(2);
           var percent_lost_project = (parseFloat(lost_project) / sum  * 100).toFixed(2);
           var percent_lost_service = (parseFloat(lost_service) / sum  * 100).toFixed(2);
           var datas = [
			        {y: lost_product, percent:percent_lost_product, label: "Product", legendText: "Product", color:"#7E0306"},
			        {y: lost_project,percent:percent_lost_project, label: "Project", legendText: "Project", color:"#D53E0F"},
			        {y: lost_service,percent:percent_lost_service, label: "Service", legendText: "Service", color:"#FA8744"},
		            ];
            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "Lost",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 240,
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            }
            });
            pie_chart.render();           
        };

        function UpdatePieChartNogo(nogo_product,nogo_project,nogo_service,chart_name) {
           var sum = parseFloat(nogo_product) + parseFloat(nogo_project) + parseFloat(nogo_service);
           var percent_nogo_product = (parseFloat(nogo_product) / sum  * 100).toFixed(2);
           var percent_nogo_project = (parseFloat(nogo_project) / sum  * 100).toFixed(2);
           var percent_nogo_service = (parseFloat(nogo_service) / sum  * 100).toFixed(2);
           var datas = [
			        {y: nogo_product, percent:percent_nogo_product, label: "Product", legendText: "Product", color:"#686868"},
			        {y: nogo_project,percent:percent_nogo_project, label: "Project", legendText: "Project", color:"#A6A6A6"},
			        {y: nogo_service,percent:percent_nogo_service, label: "Service", legendText: "Service", color:"#D3D3D3"},
		            ];

            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "No go",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 240,
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            }
            });
            pie_chart.render();  
        };

        function UpdatePieChartPending(pending_product,pending_project,pending_service,chart_name) {
           var sum = parseFloat(pending_product) + parseFloat(pending_project) + parseFloat(pending_service);
           var percent_pending_product = (parseFloat(pending_product) / sum  * 100).toFixed(2);
           var percent_pending_project = (parseFloat(pending_project) / sum  * 100).toFixed(2);
           var percent_pending_service = (parseFloat(pending_service) / sum  * 100).toFixed(2);
           var datas = [
			        {y: pending_product, percent:percent_pending_product, label: "Product", legendText: "Product", color:"#C78B05"},
			        {y: pending_project,percent:percent_pending_project, label: "Project", legendText: "Project", color:"#FFC000"},
			        {y: pending_service,percent:percent_pending_service, label: "Service", legendText: "Service", color:"#F8E07E"},
		            ];

            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "Pending",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 240,
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            }
            });
            pie_chart.render();           
        };

        function UpdatePieChartStages(stages_quote_for_budget,stages_negotiation_review,stages_proposal,stages_prospectng,stages_won,stages_lost,stages_nogo,chart_name) {
           var sum = parseFloat(stages_quote_for_budget) + parseFloat(stages_negotiation_review) + parseFloat(stages_proposal)
           + parseFloat(stages_prospectng) + parseFloat(stages_won) + parseFloat(stages_lost) + parseFloat(stages_nogo);

           var percent_stages_quote_for_budget = (parseFloat(stages_quote_for_budget) / sum  * 100).toFixed(2);
           var percent_stages_negotiation_review = (parseFloat(stages_negotiation_review) / sum  * 100).toFixed(2);
           var percent_stages_proposal = (parseFloat(stages_proposal) / sum  * 100).toFixed(2);
           var percent_stages_prospectng = (parseFloat(stages_prospectng) / sum  * 100).toFixed(2);
           var percent_stages_won = (parseFloat(stages_won) / sum  * 100).toFixed(2);
           var percent_stages_lost = (parseFloat(stages_lost) / sum  * 100).toFixed(2);
           var percent_stages_nogo = (parseFloat(stages_nogo) / sum  * 100).toFixed(2);
           var datas = [			       			        
                    {y: parseFloat(stages_quote_for_budget), percent:percent_stages_quote_for_budget, label: "Quote for Budget", legendText: "Quote for Budget", color:"#083470"},
			        {y: parseFloat(stages_negotiation_review),percent:percent_stages_negotiation_review, label: "Negotiation Review", legendText: "Negotiation Review", color:"#1C4C97"},
			        {y: parseFloat(stages_proposal),percent:percent_stages_proposal, label: "Proposal Qoute for Order", legendText: "Proposal Qoute for Order", color:"#2484C6"},
                    {y: parseFloat(stages_prospectng),percent:percent_stages_prospectng, label: "Prospecting", legendText: "Prospecting", color:"#84C2ED"},
                    {y: parseFloat(stages_won),percent:percent_stages_won, label: "Closed (Won)", legendText: "Closed (Won)", color:"#D6D6D6"},
                    {y: parseFloat(stages_lost),percent:percent_stages_lost, label: "Closed (Lost)", legendText: "Closed (Lost)", color:"#B0B0B0"},
			        {y: parseFloat(stages_nogo),percent:percent_stages_nogo, label: "No go", legendText: "No go", color:"#7D7D7D"},
		            ];
            // filter value more than 0
            datas = datas.filter(x => x.y > 0);

            var pie_chart = new CanvasJS.Chart(chart_name, {
	        animationEnabled: true,
            backgroundColor: "transparent",
	        title: {
		        text: "Stages",
                fontColor: "white",
                fontSize: "24",
                fontStyle: "normal",
                fontFamily: "angsana-new"
	        },
	        data: [{
		        type: "pie",
                showInLegend: true,
		        startAngle: 0,
                radius: "75%",
		        yValueFormatString: "##0.00\"\"",
		        indexLabel: "{label} : {y} MB , {percent} %",
                indexLabelFontColor: "white",
                toolTipContent: "{label} : {y} MB , {percent} %",
		        dataPoints: datas,
	        }],
            legend: {
                horizontalAlign: "center",
                verticalAlign: "bottom",
                fontStyle: "normal",
                fontColor: "white",
            },
            toolTip:{
                fontColor: "black",
            },
            });
            pie_chart.render(); 
        };

        var performance_stack;
        function UpdatePerformanceStack(datas){
            if (performance_stack != null){
                performance_stack.destroy();

            }
            var chartName = "performance_bar";
            var ctx = document.getElementById(chartName).getContext('2d');

            var names = [];
            var products_target = [];
            var products_actual = [];
            var projects_target = [];
            var projects_actual = [];
            var services_target = [];
            var services_actual = [];

            //get datas
            for (var i =0; i<datas.length;i++){
                names.push(datas[i].sale_name);
                products_target.push(datas[i].product_target);
                products_actual.push(datas[i].product_actual);
                projects_target.push(datas[i].project_target);
                projects_actual.push(datas[i].project_actual);
                services_target.push(datas[i].service_target);
                services_actual.push(datas[i].service_actual);
            }
            var labels = names;
            const data = {
                              labels: labels,
                              datasets: [
                                {
                                  label: 'Product Target',
                                  data: products_target,
                                  backgroundColor: '#203864',
                                  stack: 'Stack 0',
                                },
                                {
                                  label: 'Product Actual',
                                  data: products_actual,
                                  backgroundColor: '#034594',
                                  stack: 'Stack 1',
                                },
                                {
                                  label: 'Project Target',
                                  data: projects_target,
                                  backgroundColor: '#1E83C6',
                                  stack: 'Stack 0',
                                },
                                {
                                  label: 'Project Actual',
                                  data: projects_actual,
                                  backgroundColor: '#84C2ED',
                                  stack: 'Stack 1',
                                },
                                {
                                  label: 'Service Target',
                                  data: services_target,
                                  backgroundColor: '#A6A6A6',
                                  stack: 'Stack 0',
                                },
                                {
                                  label: 'Service Actual',
                                  data: services_actual,
                                  backgroundColor: '#D6D6D6',
                                  stack: 'Stack 1',
                                },
                              ],
                        };

                        const options = {
                              plugins: {
                                title: {
                                  display: false,
                                  text: 'Performance',
                                  color: '#FFFFFFC8',
                                  font: {
                                        size: 16
                                    }
                                },
                                tooltip: {
                                       callbacks: {
                                            label: function(context) {
                                                var label = context.dataset.label || '';
                                                if (label) {
                                                    label += ' : ';
                                                }
                                                if (context.parsed.y !== null) {
                                                    label += context.parsed.y + ' MB';
                                                }
                                                return label;
                                        }
                                    }
                                },
                                legend: {
                                    labels: {
                                    color: '#FFFFFFC8',
                                    font: {
                                        size: 14
                                    }
                                },
                                }
                              },
                              interaction: {
                                  intersect: false,
                              },
                              responsive: true,
                              scales: {
                                x: {
                                  stacked: true,
                                  ticks: {
                                    color: '#FFFFFFC8',
                                    font: {
                                        size: 14
                                    },
                                  },
                                },
                                y: {
                                  stacked: true,
                                  ticks: {
                                    color: '#FFFFFFC8',
                                    font: {
                                        size: 14
                                    },
                                  },
                                }
                              }

                        };
                        performance_stack = new Chart(ctx, { type: 'bar', data: data, options: options });
        };

        function PopulateDataBarChart(datas) {
            $(function () {
                if (bar_chart_stages != null)
                    bar_chart_stages.destroy();
                var chartName = "bar_chart_stages";
                var ctx = document.getElementById(chartName).getContext('2d');
                var _datas = [datas.no_data,datas.day_0, datas.day_7, datas.day_14, datas.day_30, datas.day_60];

                var type = ["No Data","< 7 Day", "< 14 Day", "< 30 Day","< 60 Day","> 60 Day"];

                var bg_colors = ['#D8D8D8', '#F1F48F', '#E2D445', '#DEA824', '#DE8124', '#E35812'];
                var border_colors = ['#D8D8D8','#F1F48F', '#E2D445', '#DEA824', '#DE8124', '#E35812'];
                var data = {
                    datasets: [
                        {
                            data: _datas,
                            backgroundColor: bg_colors,
                            borderColor: border_colors,
                            borderWidth: 2,
                        }
                    ],
                    labels: type
                }
                var options = {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: {
                            id: 'first-y-axis',
                            position: 'left',
                            type: 'linear',
                            scaleLabel: { display: true, labelString: 'Count' },
                            gridLines: { display: true, color:'#FFFFFFC8'},
                            ticks: { min: 0, beginAtZero: true,
                                color: '#FFFFFFC8',
                                font: {
                                    size: 14
                                },
                            },
                        },
                        xAxes: {
                            ticks: {
                                min: 0, beginAtZero: true,
                                color: '#FFFFFFC8',
                                font: {
                                    size: 14
                                },
                            },
                            scaleLabel: { display: true, labelString: 'Day' },
                            gridLines: { display: false }
                        },
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: "Pending Quotation",
                            color: '#FFFFFFC8',
                            font: {
                                size: 20
                            },
                        },
                        legend: {
                            position: 'top',
                            display: false,
                            labels: {
                                color: '#FFFFFFC8',
                                font: {
                                    size: 14
                                }
                            }
                        }
                    },
                    onHover: (event, chartElement) => {
                        event.native.target.style.cursor = chartElement[0] ? 'pointer' : 'default';
                    },
                    onClick: BarChartClick
                };
                bar_chart_stages = new Chart(ctx, { type: 'bar', data: data, options: options });
            });
        };
        function BarChartClick(evt, point) {
            $("#table_stages").empty();
            var name = document.getElementById("sale_name").value;
            var year = document.getElementById("years_dashboard").value;
            if (point.length > 0) {
                var index = point[0].index;
                var day = "";
                if (index == 0){
                    day = "no data";
                }else if (index == 1) {
                    day = " < 7";
                } else if (index == 2) {
                    day = "between 7 and 13";
                } else if (index == 3) {
                    day = "between 14 and 29";
                } else if (index == 4) {
                    day = "between 30 and 59";
                } else if (index == 5) {
                    day = " > 60";
                }

                $.ajax({
                    url: '@Url.Action("GetStagesDay", "Home")',
                    type: "post",
                    contentType: 'application/x-www-form-urlencoded',
                    data: {
                        year,name, day
                    },
                    success: function (response) {
                        var datas = response;
                        var dataSet = [];
                        for (var i = 0; i < datas.length; i++) {
                            var data = [
                                datas[i].quotation_no,
                                datas[i].stages,
                                datas[i].stages_update_date];
                            dataSet.push(data);
                        }
                        table(dataSet);
                    }
                });
            }
        };

        var chart_hitting_rate_individual;
        function UpdateChartHittingRateIndividual(Hitting_Rates,chart_name) {

            if (chart_hitting_rate_individual != null)
                chart_hitting_rate_individual.destroy();
            
            var product = Hitting_Rates.filter(f=>f.type == "Product").map(m=>m.hitting_rate)[0];
            var project = Hitting_Rates.filter(f=>f.type == "Project").map(m=>m.hitting_rate)[0];
            var service = Hitting_Rates.filter(f=>f.type == "Service").map(m=>m.hitting_rate)[0];
            var total = Hitting_Rates.filter(f=>f.type == "Total").map(m=>m.hitting_rate)[0];
            
            if (typeof product === "undefined"){
                product = 0;
            }
            if (typeof project === "undefined"){
                project = 0;
            }
            if (typeof service === "undefined"){
                service = 0;
            }
            if (typeof total === "undefined"){
                total = 0;
            }
            var datas = [product,project,service,total];

            var type = [ "Product", "Project", "Service","Total"];

            var bg_colors = ['#41384D', '#725A7A', '#B8AAC3','#FFFFCC'];
            var border_colors = ['#41384D', '#725A7A', '#B8AAC3','#FFFFCC'];

            chart_hitting_rate_individual = new Chart(chart_name, {
                type: 'polarArea',
                data: {
                    datasets: [
                        {
                            data: datas,
                            backgroundColor: bg_colors,
                            borderColor: border_colors,
                            borderWidth: 2,
                        }
                    ],
                    labels: type
                },
                options: {
                    plugins: {
                        title: {
                            display: true,
                            text: 'Hitting Rate',
                            color: '#FFFFFFC8',
                            font: {
                                size: 24
                            },
                        },
                        legend: {
                            position: 'right',
                            display: true,
                            labels: {
                                color: '#FFFFFFC8',
                                font: {
                                    size: 14
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.raw;
                                    if (label) {
                                        label = type[context.dataIndex] + ' : ' + label + ' %';
                                    }
                                    return label;
                                }
                            }
                        },
                    },
                    maintainAspectRatio: false,
                    scales: {
                        r: {
                            pointLabels: {
                                color: 'rgba(255,255,255,0.8)',
                            },
                            grid: {
                                    color: 'rgba(255,255,255,0.8)'
                            },
                            angleLines: {
                                    color: "gray"
                            },
                        }
                    }
                }
            });
        };

        var chart_hitting_rate_department;
        function UpdateChartHittingRateDepartment(Hitting_Rates,chart_name) {

            if (chart_hitting_rate_department != null)
                chart_hitting_rate_department.destroy();
            
            var product = Hitting_Rates.filter(f=>f.type == "Product").map(m=>m.hitting_rate)[0];
            var project = Hitting_Rates.filter(f=>f.type == "Project").map(m=>m.hitting_rate)[0];
            var service = Hitting_Rates.filter(f=>f.type == "Service").map(m=>m.hitting_rate)[0];
            var total = Hitting_Rates.filter(f=>f.type == "Total").map(m=>m.hitting_rate)[0];
            
            if (typeof product === "undefined"){
                product = 0;
            }
            if (typeof project === "undefined"){
                project = 0;
            }
            if (typeof service === "undefined"){
                service = 0;
            }
            if (typeof total === "undefined"){
                total = 0;
            }
            var datas = [product,project,service,total];

            var type = [ "Product", "Project", "Service","Total"];

            var bg_colors = ['#41384D', '#725A7A', '#B8AAC3','#FFFFCC'];
            var border_colors = ['#41384D', '#725A7A', '#B8AAC3','#FFFFCC'];

            chart_hitting_rate_department = new Chart(chart_name, {
                type: 'polarArea',
                data: {
                    datasets: [
                        {
                            data: datas,
                            backgroundColor: bg_colors,
                            borderColor: border_colors,
                            borderWidth: 2,
                        }
                    ],
                    labels: type
                },
                options: {
                    plugins: {
                        title: {
                            display: true,
                            text: 'Hitting Rate',
                            color: '#FFFFFFC8',
                            font: {
                                size: 24
                            },
                        },
                        legend: {
                            position: 'right',
                            display: true,
                            labels: {
                                color: '#FFFFFFC8',
                                font: {
                                    size: 14
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.raw;
                                    if (label) {
                                        label = type[context.dataIndex] + ' : ' + label + ' %';
                                    }
                                    return label;
                                }
                            }
                        },
                    },
                    maintainAspectRatio: false,
                    scales: {
                        r: {
                            pointLabels: {
                                color: 'rgba(255,255,255,0.8)',
                            },
                            grid: {
                                    color: 'rgba(255,255,255,0.8)'
                            },
                            angleLines: {
                                    color: "gray"
                            },
                        }
                    }
                }
            });
        };
        // Dashboard Department

        var stages_department_stack;
        function UpdateDepartmentStack(datas){
            if (stages_department_stack != null){
                stages_department_stack.destroy();

            }
            var chartName = "bar_chart_stages_department";
            var ctx = document.getElementById(chartName).getContext('2d');

            var names = [];
            var no_data = [];
            var day_0 = [];
            var day_7 = [];
            var day_14 = [];
            var day_30 = [];
            var day_60 = [];

            var fontsize = 14;

            var department = document.getElementById("department_name").value;
            if (department === "ALL"){
                fontsize = 9;
            }

            //get datas
            for (var i =0; i<datas.length;i++){
                names.push(datas[i].sale_name);
                no_data.push(datas[i].no_data);
                day_0.push(datas[i].day_0);
                day_7.push(datas[i].day_7);
                day_14.push(datas[i].day_14);
                day_30.push(datas[i].day_30);
                day_60.push(datas[i].day_60);
            }
            var labels = names;
            const data = {
                              labels: labels,                             
                              datasets: [
                                {
                                  label: '> 60 Day',
                                  data: day_60,
                                  backgroundColor: '#E35812',
                                },
                                {
                                  label: '> 30 Day',
                                  data: day_30,
                                  backgroundColor: '#DE8124',
                                },
                                {
                                  label: '> 14 Day',
                                  data: day_14,
                                  backgroundColor: '#DEA824',
                                },
                                {
                                  label: '> 7 Day',
                                  data: day_7,
                                  backgroundColor: '#E2D445',
                                },
                                {
                                  label: '> 0 Day',
                                  data: day_0,
                                  backgroundColor: '#F1F48F',
                                },
                                {
                                  label: 'No Data',
                                  data: no_data,
                                  backgroundColor: '#D8D8D8',
                                },
                              ],
                        };

                        const options = {
                              indexAxis: 'y',
                              maintainAspectRatio: false,
                              plugins: {
                                title: {
                                  display: true,
                                  text: 'Pending Quotation',
                                  color: '#FFFFFFC8',
                                  font: {
                                        size: 16
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            var label = context.dataset.label || '';
                                                if (label) {
                                                    label += ' : ';
                                                }
                                                if (context.parsed.y !== null) {
                                                    label += context.raw + ' Day';
                                                }
                                            return label;
                                        }
                                    }
                                },
                                legend: {
                                    labels: {
                                        color: '#FFFFFFC8',
                                        font: {
                                            size: 14
                                        },
                                 
                                    },
                                    display: false
                                }
                              },
                              @*interaction: {
                                  intersect: false,
                              },*@
                              responsive: true,
                              scales: {
                                x: {
                                  stacked: true,
                                  ticks: {
                                    color: '#FFFFFFC8',
                                    font: {
                                        size: fontsize
                                    },
                                  },
                                  grid: {
                                      color: '#FFFFFF88'
                                  }
                                },
                                y: {
                                  stacked: true,
                                  ticks: {
                                    color: '#FFFFFFC8',
                                    font: {
                                        size: fontsize
                                    },
                                  },
                                  grid: {
                                      color: '#FFFFFF88'
                                  }
                                }
                              },
                              onHover: (event, chartElement) => {
                                event.native.target.style.cursor = chartElement[0] ? 'pointer' : 'default';
                              },
                              onClick: LastUpdateDepartmentClick

                        };
                        stages_department_stack = new Chart(ctx, { type: 'bar', data: data, options: options });
        };

        function LastUpdateDepartmentClick(evt,point) {
            
            var year = document.getElementById("years_dashboard_department").value;       
            $("#table_stages_department").empty();
            if (point.length > 0) {
                var day = "";
                var name = DataLastUpdateDepartment[point[0].index].sale_name;
                var dataIndex = stages_department_stack._active[0].datasetIndex;
                if (dataIndex == 5){
                    day = "no data";
                }else if (dataIndex == 4) {
                    day = " < 7";
                } else if (dataIndex == 3) {
                    day = "between 7 and 13";
                } else if (dataIndex == 2) {
                    day = "between 14 and 29";
                } else if (dataIndex == 1) {
                    day = "between 30 and 59";
                } else if (dataIndex == 0) {
                    day = " > 60";
                }

                $.ajax({
                    url: '@Url.Action("GetStagesDay", "Home")',
                    type: "post",
                    contentType: 'application/x-www-form-urlencoded',
                    data: {
                        year,name, day
                    },
                    success: function (response) {
                        var datas = response;
                        var dataSet = [];
                        for (var i = 0; i < datas.length; i++) {
                            var data = [
                                datas[i].quotation_no,
                                datas[i].stages,
                                datas[i].stages_update_date];
                            dataSet.push(data);
                        }
                        tableLastUpdateDepartment(dataSet);
                    }
                });
            }
        };

        var tables;
        function table(dataSet) {
            if (tables !== undefined)
                tables.destroy();
                tables = $('#table_stages').DataTable({
                data: dataSet,
                columns: [
                    { title: "Quotation"},
                    { title: "Stages Name"},
                    { title: "Last Update (Day)" },
                ],
                "columnDefs": [
                    {
                        "targets": [0, 1, 2],
                        "className": "dt-center",

                    },
                ],
                "paging": false,
                "searching": false,
                "bInfo": false,
                "scrollX": true,
                "fixedHeader":true,
            });
            $(tables.table().body()).addClass('text-dark');
        }

        var tables_Lastupdate_department;
        function tableLastUpdateDepartment(dataSet) {
            if (tables_Lastupdate_department !== undefined)
                tables_Lastupdate_department.destroy();
                tables_Lastupdate_department = $('#table_stages_department').DataTable({
                data: dataSet,
                columns: [
                    { title: "Quotation"},
                    { title: "Stages Name"},
                    { title: "Last Update (Day)" },
                ],
                "columnDefs": [
                    {
                        "targets": [0, 1, 2],
                        "className": "dt-center",

                    },
                ],
                "paging": false,
                "searching": false,
                "bInfo": false,
                "scrollX": true,
                "fixedHeader":true,
            });
            $(tables_Lastupdate_department.table().body()).addClass('text-dark');
        };

        var tables_performance;
        function tablePerformance(dataSet) {
            setTimeout(()=>{
                if (tables_performance !== undefined)
                    tables_performance.destroy();
                tables_performance = $('#table_performance').DataTable({
                data: dataSet,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                        "className": "text-center",
                    },
                ],
                "createdRow": function (row, data, index) {
                    if (data[0] === "Total") {
                        $('td', row).css('background-color', '#E3C871');
                        $('td', row).addClass('highlight');
                    }
                },
                "paging": false,
                "searching": false,
                "bInfo": false,
                "scrollX": true,
                "ordering":false,
            });

            $(tables_performance.table().body()).addClass('text-dark');
            },100);
        };

        function initPerformanceStack(datas){
                    var dataSet = [];
                    var total_target = 0;
                    var total_actual = 0;
                    for (var i = 0; i < datas.length; i++) {
                           var sum_target = (parseFloat(datas[i].product_target) + parseFloat(datas[i].project_target) +  parseFloat(datas[i].service_target)).toFixed(3);
                           var sum_actual = (parseFloat(datas[i].product_actual) + parseFloat(datas[i].project_actual) +  parseFloat(datas[i].service_actual)).toFixed(3);
                           var percent = ((sum_actual / sum_target) * 100).toFixed(2);
                           total_target += parseFloat(sum_target);
                           total_actual += parseFloat(sum_actual);
                           var data = [
                               datas[i].sale_name,
                               sum_target,
                               sum_actual,
                               percent
                               ];

                           dataSet.push(data);
                       }
                       var total_percent = ((total_actual / total_target) *100).toFixed(2);
                       dataSet.push(["Total",total_target.toFixed(3),total_actual.toFixed(3),total_percent]);
                    tablePerformanceStack(dataSet);
        };
        var tables_performance_stack;
        function tablePerformanceStack(dataSet) {
            setTimeout(()=>{
                if (tables_performance_stack !== undefined)
                    tables_performance_stack.destroy();

                tables_performance_stack = $('#table_performance_stack').DataTable({
                data: dataSet,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3],
                        "className": "text-center",
                    },
                ],
                 "createdRow": function (row, data, index) {
                    if (data[0] === "Total") {
                        $('td', row).css('background-color', '#E3C871');
                        $('td', row).addClass('highlight');
                    }
                },
                "paging": false,
                "searching": false,
                "bInfo": false,
                "scrollX": true,
                "ordering":false,
            });

            $(tables_performance_stack.table().body()).addClass('text-dark');
            },100);
        };

        function add_department(departments) {
                var data_departments = [];
                for (var i = 0; i < departments.length; i++) {
                    var data =
                    {
                        "text": departments[i].department,
                        "value": departments[i].department,
                    }
                    data_departments.push(data);
                }

                return data_departments;
        };
        function add_sale(sales) {
                var data_sales = [];
                for (var i = 0; i < sales.length; i++) {
                    var data =
                    {
                        "text": sales[i].name,
                        "value": sales[i].name,
                    }
                    data_sales.push(data);
                }

                return data_sales;
        };
        function add_year(years) {
                var data_years = [];
                for (var i = 0; i < years.length; i++) {
                    var data =
                    {
                        "text": years[i],
                        "value": years[i],
                    }
                    data_years.push(data);
                }

                return data_years;
        };
    </script>
}
