@{ 
    ViewData["Title"] = "Analysis";
}
<div class="row pt-3 px-3">
    <div class="col-xl-4 col-md-8 pb-3">
        <select id="job_id" class="form-control">
            <option value="">Please Select Job</option>
        </select>
    </div>
    <div class="col-xl-2 col-md-4 pb-3">
        <button id="btn_analysis" type="button" class="btn btn-primary form-control elevation-1">
            <i class="fas fa-search"></i> Analysis
        </button>
    </div>
</div>
<div class="row px-3">
    <div class="col-xl-6">
        <div class="card bg-dark" style="height:600px">
            <div class="card-header">
                <span class="card-title"><i class="fas fa-chart-pie"></i> Task Ratio</span>
            </div>
            <div class="card-body p-1">
                <div id="task_ratio" class="h-100 w-100"></div>
            </div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card bg-dark" style="height:600px">
            <div class="card-header">
                <span class="card-title"><i class="fas fa-chart-bar"></i> Task Distribution</span>
            </div>
            <div class="card-body">
                <div class="h-100 w-100">
                    <canvas id="task_distribution"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row px-3">
    <div class="col-xl-6">
        <div class="card bg-dark" style="height:600px">
            <div class="card-header">
                <span class="card-title">Manpower Ratio</span>
            </div>
            <div class="card-body">
                <div id="manpower_ratio" class="h-100 w-100"></div>
            </div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card bg-dark" style="height:600px">
            <div class="card-header">
                <span class="card-title">Manpower Distribution</span>
            </div>
            <div class="card-body">
                <div class="w-100 h-100">
                    <canvas id="manpower_distribution"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        //Variable Declaration
        var whs_ratio = [];
        var inv_ratio = [];
        var jobs = [];

        //Debug Parameters
        var debug_whs_ratio = false;
        var debug_inv_ratio = false;
        var debug_job = false;

        $(document).ready(async function () {
            await GetJobs();
            await GenerateJobOptions();
        });

        $('#btn_analysis').on('click', async function () {
            var job_id = $('#job_id').val();
            await GetTasksRatio(job_id);
            await GetPercentInvolve(job_id);
            GenerateChartTaskRatio();
            GenerateChartTaskDistribution();
            GenerateChartManpowerRatio();
            GenerateChartManpowerDistribution();
        });

        async function GetJobs() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobs", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                },
                success: function (response) {
                    jobs = response;
                    if (debug_job) {
                        console.log("Jobs");
                        console.log(response);
                    }
                }
            });
        }

        function GenerateJobOptions() {
            $('#job_id').empty();
            var job_str = '<option value="" selected disabled>Please Select Job</option>';
            for (var i = 0; i < jobs.length; i++) {
                job_str += '<option value="' + jobs[i].job_id + '">' + jobs[i].job_name + '</option>';
            }
            $('#job_id').append(job_str);
        }

        async function GetTasksRatio(job_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTasksRatio", "Analysis")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_id
                },
                success: function (response) {
                    whs_ratio = response;
                    if (debug_whs_ratio) {
                        console.log("Task Total Working Hours");
                        console.log(whs_ratio);
                    }
                }
            });
        }

        async function GetPercentInvolve(job_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetPercentInvolve", "Analysis")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_id
                },
                success: function (response) {
                    inv_ratio = response;
                    if (debug_inv_ratio) {
                        console.log("Task Total Working Hours");
                        console.log(inv_ratio);
                    }
                }
            });
        }

        var chart_task_ratio;
        function GenerateChartTaskRatio() {

            var whr_data = [];
            for (var i = 0; i < whs_ratio.length; i++) {
                whr_data.push(
                    {
                        y: whs_ratio[i].hours,
                        indexLabel: whs_ratio[i].hours + " Hours - " + whs_ratio[i].task_name,
                        indexLabelFontSize: 14,
                        indexLabelFontFamily: "san-seriff",
                        indexLabelFontColor: "white",
                        legendText: whs_ratio[i].task_name,
                    }
                );
            }

            chart_task_ratio = new CanvasJS.Chart("task_ratio",
                {
                    title: {
                        text: "Task Ratio",
                        fontSize: 18,
                        fontFamily: "san-seriff",
                        fontWeight: "bold",
                        fontColor: "white",
                    },
                    legend: {
                        fontSize: 14,
                        fontFamily: "san-seriff",
                        fontColor: "white",
                        fontWeight: "normal",
                    },
                    backgroundColor: "transparent",
                    data: [{
                        type: "doughnut",
                        radius: "50%",
                        showInLegend: true,
                        toolTipContent: "{y} Hours - {legendText}",
                        legendText: "{legendText}",
                        dataPoints: whr_data,
                    }],
                }
            );
            chart_task_ratio.render();
        }

        var chart_task_distribution;
        function GenerateChartTaskDistribution() {
            var task_names = [];
            var hours = [];

            for (var i = 0; i < whs_ratio.length; i++) {
                task_names.push(whs_ratio[i].task_name);
                hours.push(whs_ratio[i].hours);
            }

            if (chart_task_distribution !== undefined) {
                chart_task_distribution.destroy();
            }

            var ctx3 = document.getElementById('task_distribution').getContext('2d');
            chart_task_distribution = new Chart(ctx3, {
                type: 'bar',
                data: {
                    labels: task_names,
                    datasets: [{
                        label: "Task Distribution",
                        data: hours,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.8)',
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(255, 206, 86, 0.8)',
                            'rgba(75, 192, 192, 0.8)',
                            'rgba(153, 102, 255, 0.8)',
                            'rgba(255, 159, 64, 0.8)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    maintainAspectRatio: false,
                }
            });
        }

        var chart_manpower_ratio;
        function GenerateChartManpowerRatio() {

            var inv_data = [];
            for (var i = 0; i < inv_ratio.length; i++) {
                inv_data.push(
                    {
                        y: inv_ratio[i].hours,
                        indexLabel: inv_ratio[i].hours + " Hours - " + inv_ratio[i].user_name,
                        indexLabelFontSize: 14,
                        indexLabelFontFamily: "san-seriff",
                        indexLabelFontColor: "white",
                        legendText: inv_ratio[i].user_name,
                    }
                );
            }

            chart_manpower_ratio = new CanvasJS.Chart("manpower_ratio",
                {
                    title: {
                        text: "Manpower Ratio",
                        fontSize: 18,
                        fontFamily: "san-seriff",
                        fontWeight: "bold",
                        fontColor: "white",
                    },
                    legend: {
                        fontSize: 14,
                        fontFamily: "san-seriff",
                        fontColor: "white",
                        fontWeight: "normal",
                    },
                    backgroundColor: "transparent",
                    data: [{
                        type: "doughnut",
                        radius: "50%",
                        showInLegend: true,
                        toolTipContent: "{y} Hours - {legendText}",
                        legendText: "{legendText}",
                        dataPoints: inv_data,
                    }],
                }
            );
            chart_manpower_ratio.render();
        }

        var chart_manpower_distribution;
        function GenerateChartManpowerDistribution() {
            var user_names = [];
            var hours = [];

            for (var i = 0; i < inv_ratio.length; i++) {
                user_names.push(inv_ratio[i].user_name);
                hours.push(inv_ratio[i].hours);
            }

            if (chart_manpower_distribution !== undefined) {
                chart_manpower_distribution.destroy();
            }

            var ctx4 = document.getElementById('manpower_distribution').getContext('2d');
            chart_manpower_distribution = new Chart(ctx4, {
                type: 'bar',
                data: {
                    labels: user_names,
                    datasets: [{
                        label: 'Manpower Distribution',
                        data: hours,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.8)',
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(255, 206, 86, 0.8)',
                            'rgba(75, 192, 192, 0.8)',
                            'rgba(153, 102, 255, 0.8)',
                            'rgba(255, 159, 64, 0.8)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    maintainAspectRatio: false,
                }
            });
        }

    </script>
}