@model WebForecastReport.Models.UserModel;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Quotation";
}
<style>
    #table tr td:nth-of-type(1),
    #table tr td:nth-of-type(2) {
        cursor: pointer;
    }

    #table_types tr td:nth-of-type(1),
    #table_types tr td:nth-of-type(2) {
        cursor: pointer;
    }

    td.highlight_yellow {
        background-color: yellow;
    }

    td.highlight_red {
        font-weight: bold;
        color: red;
        background-color: burlywood;
    }
</style>
<div class="row p-3">

    <div class="col-md-12 col-xl-12">
        <div class="row d-flex justify-content-between">
            <div class="col-md-2 col-xl-2 pb-3">
                <button type="button" id="AddQuotation" class="btn btn-primary form-control" style="height:55px">
                    <i class="fas fa-plus" style="font-size:20px"> Quotation</i>
                </button>
            </div>
            @{
                if (Model.role == "Admin")
                {
                    <div class="col-md-2 col-xl-2 pb-3" hidden>
                        <a type="button" class="btn btn-success form-control" style="height:55px;font-size:20px;text-align:center;padding-top:10px" href="@Url.Action("DownloadXlsxReport", "Quotation")">
                            <i class="fas fa-download" style="padding-right:10px"></i>Export
                        </a>
                    </div>
                }
            }

        </div>
    </div>

    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <span class="card-title"><b>Quotations</b></span>
            </div>
            <div class="card-body">
                <table id="table" class="table table-xl cell-border table-dark display responsive nowrap" width="100%">
                </table>
            </div>
        </div>
    </div>
</div>

<partial name="Modal" />
<partial name="ModalEdit" />
@section Scripts
{
    <script type="text/javascript">
    var quotation_datas = [];
    var quotation = '';
    var revision = '';
    var date = '';
    var customer = '';
    var enduser = '';
    var project_name = '';
    var site_location = '';
    var product_type = '';
    var type = '';
    var part_no = '';
    var spec = '';
    var quantity = '';
    var supplier_quotation_no = '';
    var total_value = '';
    var unit = '';
    var quoted_price = '';
        var expected_order_date = '';
        var old_expected_order_date = '';
    var required_onsite_date = '';
        var proposer = '';
        
    var expected_date = '';
    var status = '';
    var stages = '';
    var stages_update_date = '';
    var how_to_support = '';
    var competitor = '';
    var competitor_description = '';
    var competitor_price = '';
    var sale_name = '';
    var department = '';
    var detail = '';

    var arrType = [];
    var arrPart_No = [];
    var arrSpec = [];
    var arrQuantity = [];
    var arrSupplier_Quotation_No = [];
    var arrTotal_Value = [];
    var arrUnit = [];

    var Units = ["THB", "EUR", "USD", "JPY","CHF","GBP","SGD"];
    var Status = ["IN", "OUT"];
    var Stages = ["Quote for Buddget", "Negotiation/Review", "Proposal/Quote for Order", "Prospecting", "Closed(Won)", "Closed(Lost)"];

    var Types = [];
    var Departments = [];
    var Sales = [];
    var Proposers = [];
    var Customers = [];
    var EndUsers = [];

    var state_admin = false;

    var statepage = false;

        $(document).ready(function () {
            init();
        });

    function init() {
        var name = '@Model.name';
        var role = '@Model.role';
        $.ajax({
            url: '@Url.Action("GetData", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name, role
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                //add sale to select
                Sales = add_sale(response.sales);
                Proposers = add_proposer(response.sales);
                //add customer to datalist
                Customers = add_customer(response.customers);

                //add end user to datalist
                EndUsers = add_enduser(response.endusers);

                // add Department
                Departments = add_department(response.departments);

                var datas = response.quatations;
                var dataSet = [];
                for (var i = 0; i < datas.length; i++) {
                    var data = ["",
                        "",
                        datas[i].quotation_no,
                        datas[i].revision,
                        datas[i].date,
                        datas[i].customer,
                        datas[i].enduser,
                        datas[i].project_name,
                        datas[i].site_location,
                        datas[i].product_type,
                        datas[i].type,
                        datas[i].part_no,
                        datas[i].spec,
                        datas[i].quantity,
                        datas[i].supplier_quotation_no,
                        datas[i].total_value,
                        datas[i].unit,
                        datas[i].quoted_price,
                        datas[i].expected_order_date,
                        datas[i].required_onsite_date,
                        datas[i].proposer,
                        datas[i].expected_date,
                        datas[i].status,
                        datas[i].stages,
                        datas[i].stages_update_date,
                        datas[i].how_to_support,
                        datas[i].competitor,
                        datas[i].competitor_description,
                        datas[i].competitor_price,
                        datas[i].sale_name,
                        datas[i].department,
                        datas[i].detail];

                    dataSet.push(data);
                }
                quotation_datas = dataSet;

                table(dataSet);
            }
        });
    };
    function init_view() {
        var dataSet = [];
        for (var i = 0; i < arrType.length; i++) {
            var data = [arrType[i], arrPart_No[i], arrSpec[i], arrQuantity[i], arrSupplier_Quotation_No[i], arrTotal_Value[i], arrUnit[i]];

            dataSet.push(data);
        }
        table_view(dataSet);

    };
    function init_edit() {
        var dataSet = [];
        for (var i = 0; i < arrType.length; i++) {
            var data = ["","",arrType[i], arrPart_No[i], arrSpec[i], arrQuantity[i], arrSupplier_Quotation_No[i], arrTotal_Value[i], arrUnit[i]];

            dataSet.push(data);
        }
        table_edit(dataSet);
    };

    var tables;
    function table(dataSet) {
        if (tables !== undefined)
            tables.destroy();
        tables = $('#table').DataTable({
            data: dataSet,
            columns: [
                { title: "Edit " },
                { title: "View" },
                { title: "Quotation No" },
                { title: "Revision" },
                { title: "Quotation Created Date" },
                { title: "Customer" },
                { title: "End User" },
                { title: "Project Name" },
                { title: "Site Location" },
                { title: "Product Type" },
                { title: "Type" },
                { title: "Part No" },
                { title: "Spec" },
                { title: "Quantity" },
                { title: "Supplier Quotation No" },
                { title: "Total Value" },
                { title: "UModelit" },
                { title: "Quoted Price" },
                { title: "Expected Order Date" },
                { title: "Required Onsite Date" },
                { title: "Proposal Created By" },
                { title: "Proposal Expected Date" },
                { title: "Status" },
                { title: "Stages" },
                { title: "Stages Update Date" },
                { title: "How supplier support to win project" },
                { title: "Competitor" },
                { title: "Competitor Description" },
                { title: "Competitor Price" },
                { title: "Sale Name" },
                { title: "Department" },
                { title: "Detail Project" },
            ],
            "columnDefs": [
                {
                    "targets": 0,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-pen\"></i>",
                    "className": 'dt-body-center',
                },
                {
                    "targets": 1,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-eye\"></i>",
                    "className": 'dt-body-center'
                },

            ],
            scrollX: true,
            stateSave: statepage,
            createdRow: function (row, data, index) {
                var diffDay = diffDate(data[20], new Date()); //column Required Onsite Date
                if (diffDay > -3 && diffDay < 0) {
                    $('td', row).eq(20).addClass('highlight_yellow');
                } else if (diffDay >=0) {
                    $('td', row).eq(20).addClass('highlight_red');
                }
            },


        });
        $(tables.table().body()).addClass('text-dark');
    }

    var tables_view;
    function table_view(dataSet) {
        if (tables_view !== undefined)
            tables_view.destroy();
        tables_view = $('#view_table_types').DataTable({
            data: dataSet,
            columns: [
                { title: "Type", width: 80 },
                { title: "Part No", width: 80 },
                { title: "Spec", width: 80 },
                { title: "Quantity", width: 80 },
                { title: "Supplier Quotation No", width: 80 },
                { title: "Total Value", width: 80 },
                { title: "Unit", width: 30 },
            ],
            "scrollX": true,
            "paging": false,
            "searching": false,
            "bInfo": false,

        });
        $(tables_view.table().body()).addClass('text-dark');
    };

    var tables_edit;
    function table_edit(dataSet) {
        if (tables_edit !== undefined)
            tables_edit.destroy();
            tables_edit = $('#table_types').DataTable({
            data: dataSet,
            columns: [
                { title: "Edit", width: 2, },
                { title: "Delete", width: 5 },
                { title: "Name", width: 80 },
                { title: "Part No", width: 80 },
                { title: "Spec", width: 80 },
                { title: "Quantity", width: 80 },
                { title: "Supplier Quotation No", width: 80 },
                { title: "Total Value", width: 80 },
                { title: "Unit", width: 30 },
            ],
            "columnDefs": [
                {
                    "targets": 0,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-pen\"></i>",
                    "className": 'dt-body-center',
                },
                {
                    "targets": 1,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-trash\"></i>",
                    "className": 'dt-body-center',
                },
                {
                    "targets": [3, 4, 5, 6],
                    "visible": false,
                    "searchable": false,
                    "className": 'dt-body-center',
                }
            ],
            "scrollX": true,
            "paging": false,
            "searching": false,
            "bInfo": false,

        });
        $(tables_edit.table().body()).addClass('text-dark');
    };

    $('#AddQuotation').on('click', function () {
        var name = '@Model.name';
        var department = '@Model.department';
        var role = '@Model.role';
        $.ajax({
            url: '@Url.Action("GetQuotation", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name,
                department,
                role
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                var datas = response.quotation;
                var dataSet = [];
                for (var i = 0; i < datas.length; i++) {
                    var data = ["",
                        "",
                        datas[i].quotation_no,
                        datas[i].revision,
                        datas[i].date,
                        datas[i].customer,
                        datas[i].enduser,
                        datas[i].project_name,
                        datas[i].site_location,
                        datas[i].product_type,
                        datas[i].type,
                        datas[i].part_no,
                        datas[i].spec,
                        datas[i].quantity,
                        datas[i].supplier_quotation_no,
                        datas[i].total_value,
                        datas[i].unit,
                        datas[i].quoted_price,
                        datas[i].expected_order_date,
                        datas[i].required_onsite_date,
                        datas[i].proposer,
                        datas[i].expected_date,
                        datas[i].status,
                        datas[i].stages,
                        datas[i].stages_update_date,
                        datas[i].how_to_support,
                        datas[i].competitor,
                        datas[i].competitor_description,
                        datas[i].competitor_price,
                        datas[i].sale_name,
                        datas[i].department,
                        datas[i].detail];

                    dataSet.push(data);
                }
                table(dataSet);
            }
        });
    });

    $('#table').on('click', 'tbody td', function () {
        var cell = tables.cell(this);
        var column = cell[0][0].column;
        quotation = cell.data()[2];
        revision = cell.data()[3];
        date = cell.data()[4];
        customer = cell.data()[5];
        enduser = cell.data()[6];
        project_name = cell.data()[7];
        site_location = cell.data()[8];
        product_type = cell.data()[9];
        type = cell.data()[10];
        part_no = cell.data()[11];
        spec = cell.data()[12];
        quantity = cell.data()[13];
        supplier_quotation_no = cell.data()[14];
        total_value = cell.data()[15];
        unit = cell.data()[16];
        quoted_price = cell.data()[17];
        expected_order_date = cell.data()[18];
        old_expected_order_date = expected_order_date;
        required_onsite_date = cell.data()[19];
        proposer = cell.data()[20];
        expected_date = cell.data()[21];
        status = cell.data()[22];
        stages = cell.data()[23];
        stages_update_date = cell.data()[24];
        how_to_support = cell.data()[25];
        competitor = cell.data()[26];
        competitor_description = cell.data()[27];
        competitor_price = cell.data()[28];
        sale_name = cell.data()[29];
        department = cell.data()[30];
        detail = cell.data()[31];

        arrType = [];
        arrPart_No = [];
        arrSpec = [];
        arrQuantity = [];
        arrSupplier_Quotation_No = [];
        arrTotal_Value = [];
        arrUnit = [];
        var count = (type.match(/,/g) || []).length;
        for (var i = 0; i <= count; i++) {
            if (type != "") {
                arrType.push(type.split(',')[i]);
                arrPart_No.push(part_no.split(',')[i]);
                arrSpec.push(spec.split(',')[i]);
                arrQuantity.push(quantity.split(',')[i]);
                arrSupplier_Quotation_No.push(supplier_quotation_no.split(',')[i]);
                arrTotal_Value.push(total_value.split(',')[i]);
                arrUnit.push(unit.split(',')[i]);
            }
        }
        if (column == "0") {

            //clear selection type and disabled button add
            document.getElementById("btnAddType").disabled = true;
            $('#types').empty();

            document.getElementById('edit_quotation_no').value = quotation;
            document.getElementById('edit_revision').value = revision;
            document.getElementById('edit_date').value = date;
            document.getElementById('edit_customer').value = customer;

            document.getElementById('edit_enduser').value = enduser;

            document.getElementById('edit_project_name').value = project_name;
            document.getElementById('edit_site_location').value = site_location;
            document.getElementById('edit_product_type').value = product_type;
           

            document.getElementById('edit_quoted_price').value = quoted_price;
            document.getElementById('edit_expected_order_date').value = expected_order_date;
            document.getElementById('edit_required_onsite_date').value = required_onsite_date;

            $('#edit_proposer').empty();
            var selectProposer = document.getElementById('edit_proposer');
            for (var i = 0, l = Proposers.length; i < l; i++) {
                var option = Proposers[i];
                selectProposer.options.add(new Option(option.text, option.value, option.selected));
            }
            var index_proposer = Proposers.map(function (e) { return e.value; }).indexOf(proposer);
            document.getElementById('edit_proposer').selectedIndex = index_proposer;

            document.getElementById('edit_expected_date').value = expected_date;

            var proposal = document.getElementById('edit_proposer').value;
            if (proposal != "") {
                document.getElementById('edit_expected_date').disabled = false;
            } else {
                document.getElementById('edit_expected_date').disabled = true;
            }
            document.getElementById('edit_status').value = status;
            var index_status = Status.indexOf(status);
            document.getElementById('edit_status').selectedIndex = index_status;

            document.getElementById('edit_stages').value = stages;
            var index_stages = Stages.indexOf(stages);
            document.getElementById('edit_stages').selectedIndex = index_stages;

            document.getElementById('edit_stages_update_date').value = stages_update_date;
            document.getElementById('edit_how_to_support').value = how_to_support;
            document.getElementById('edit_competitor').value = competitor;
            document.getElementById('edit_competitor_description').value = competitor_description;
            document.getElementById('edit_competitor_price').value = competitor_price;

            $('#edit_sale_name').empty();
            var selectBox = document.getElementById('edit_sale_name');
            for (var i = 0, l = Sales.length; i < l; i++) {
                var option = Sales[i];
                selectBox.options.add(new Option(option.text, option.value, option.selected));
            }
            var index_sale = Sales.map(function (e) { return e.value; }).indexOf(sale_name);
            document.getElementById('edit_sale_name').selectedIndex = index_sale;

            $('#edit_department').empty();
            var selectDepartment = document.getElementById('edit_department');
            for (var i = 0, l = Departments.length; i < l; i++) {
                var option = Departments[i];
                selectDepartment.options.add(new Option(option.text.department, option.value.department, option.selected));
            }
            var index_department = Departments.map(function (e) { return e.value.department; }).indexOf(department);
            document.getElementById('edit_department').selectedIndex = index_department;


            document.getElementById('edit_detail').value = detail;


            //check state admin
            var role = '@Model.role';
            if (role == "Admin") {
                document.getElementById('edit_sale_name').disabled = false;
            } else {
                document.getElementById('edit_sale_name').disabled = true;
            }

            //init data table
            init_edit();

            //get type

            var type = product_type;
            $.ajax({
                url: '@Url.Action("GetType", "Quotation")',
                type: "post",
                contentType: 'application/x-www-form-urlencoded',
                data: {
                    type
                },
                success: function (response) {
                    // Enable Add Button
                    document.getElementById("btnAddType").disabled = false;

                    var data = response;
                    // add Type
                    Types = add_type(data);
                    // add select type
                    $('#types').empty();
                    var selectType = document.getElementById('types');
                    for (var i = 0, l = Types.length; i < l; i++) {
                        var option = Types[i];
                        selectType.options.add(new Option(option.text, option.value, option.selected));
                    }
                    document.getElementById('types').selectedIndex = 0;
                }
            });

            $('#EditModal').modal();
        } else if (column == "1") {

            document.getElementById('quotation_no').value = quotation;
            document.getElementById('revision').value = revision;
            document.getElementById('date').value = date;
            document.getElementById('customer').value = customer;
            document.getElementById('enduser').value = enduser;
            document.getElementById('project_name').value = project_name;
            document.getElementById('site_location').value = site_location;
            document.getElementById('product_type').value = product_type;
     
            document.getElementById('quoted_price').value = quoted_price;
            document.getElementById('expected_order_date').value = expected_order_date;
            document.getElementById('required_onsite_date').value = required_onsite_date;
            document.getElementById('proposer').value = proposer;
            document.getElementById('expected_date').value = expected_date;
            document.getElementById('status').value = status;
            document.getElementById('stages').value = stages;
            document.getElementById('stages_update_date').value = stages_update_date;
            document.getElementById('how_to_support').value = how_to_support;
            document.getElementById('competitor').value = competitor;
            document.getElementById('competitor_description').value = competitor_description;
            document.getElementById('competitor_price').value = competitor_price;
            document.getElementById('sale_name').value = sale_name;

            document.getElementById('department').innerHTML = department;

            document.getElementById('detail').value = detail;

            //init data table view
            init_view();
            $('#ShowModal').modal();
        }

    });
    $('#table_types').on('click', 'tbody td', function () {
        var cell = tables_edit.cell(this);
        var column = cell[0][0].column;
        var index = arrType.indexOf(cell.data()[2]);  //index of name type
        if (column == 0) {
            document.getElementById('edit_sub_type').value = arrType[index];
            document.getElementById('edit_sub_part_no').value = arrPart_No[index];
            document.getElementById('edit_sub_spec').value = arrSpec[index];
            document.getElementById('edit_sub_quantity').value = arrQuantity[index];
            document.getElementById('edit_sub_supplier_quotation_no').value = arrSupplier_Quotation_No[index];
            document.getElementById('edit_sub_total_value').value = arrTotal_Value[index];
            document.getElementById('edit_sub_unit').value = arrUnit[index];

            var unit = arrUnit[index];
            var index_unit = Units.indexOf(unit)
            document.getElementById('edit_sub_unit').selectedIndex = index_unit;
            $('#EditTypeModal').modal('show');
        } else if (column == 1) {
            //var type = arrType[index];
            //var index = arrType.indexOf(type);
            remove_data(index);

            //reload data
            init_edit();
        }

    });
        $('#edit_quotationConfirm').on('click', function () {

            var user = '@Model.name';

        var quotation = document.getElementById('edit_quotation_no').value;
        var revision = document.getElementById('edit_revision').value;
        var date = document.getElementById('edit_date').value;
        var customer = document.getElementById('edit_customer').value;
        var enduser = document.getElementById('edit_enduser').value;
        var project_name = document.getElementById('edit_project_name').value;
        var site_location = document.getElementById('edit_site_location').value;
        var product_type = document.getElementById('edit_product_type').value;
        var type = arrType.join();
        var part_no = arrPart_No.join();
        var spec = arrSpec.join();
        var quantity = arrQuantity.join();
        var supplier_quotation_no = arrSupplier_Quotation_No.join();
        var total_value = arrTotal_Value.join();
        var unit = arrUnit.join();
        var quoted_price = document.getElementById('edit_quoted_price').value;
        var expected_order_date = document.getElementById('edit_expected_order_date').value;
        var required_onsite_date = document.getElementById('edit_required_onsite_date').value;
        var proposer = document.getElementById('edit_proposer').value;
        var expected_date = document.getElementById('edit_expected_date').value;
        var status = document.getElementById('edit_status').value;
        var stages = document.getElementById('edit_stages').value;
        var stages_update_date = document.getElementById('edit_stages_update_date').value;
        var how_to_support = document.getElementById('edit_how_to_support').value;
        var competitor = document.getElementById('edit_competitor').value;
        var competitor_description = document.getElementById('edit_competitor_description').value;
        var competitor_price = document.getElementById('edit_competitor_price').value;
        var sale_name = document.getElementById('edit_sale_name').value;
        var department = document.getElementById('edit_department').value;
        var detail = document.getElementById('edit_detail').value;

        $.ajax({
            url: '@Url.Action("Update", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                user,quotation, revision, date, customer, enduser, project_name, site_location, product_type, type, part_no, spec, quantity, supplier_quotation_no,
                total_value, unit, quoted_price, expected_order_date, old_expected_order_date, required_onsite_date, proposer, expected_date, status, stages, stages_update_date, how_to_support, competitor,
                competitor_description, competitor_price, sale_name,department, detail
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                if (response.message == "Update Success") {
                    location.reload(); //reload page
                    toastr.success("Update Success");
                } else {
                    toastr.error("Update Failed");
                }
            }
        });
        $('#EditModal').modal('hide');
    });
    $('#btnAddType').on('click', function () {
        var value = document.getElementById("types").value;

        if (value !== "") {
            // add data
            add_data(value);
            $('#group_types').attr('hidden', false);

            init_edit();
        }

    });

    $('#clear_btnType').on('click', function () {
        clear_dataall();
    });
    $('#edit_btnType').on('click', function () {

        init_edit();

        $('#EditMoreModal').modal();

    });
    $('#edit_TypeConfirm').on('click', function () {
        var type = document.getElementById('edit_sub_type').value;
        var part_no = document.getElementById('edit_sub_part_no').value;
        var spec = document.getElementById('edit_sub_spec').value;
        var quantity = document.getElementById('edit_sub_quantity').value;
        var supplier = document.getElementById('edit_sub_supplier_quotation_no').value;
        var total_value = document.getElementById('edit_sub_total_value').value;
        var unit = Units[document.getElementById('edit_sub_unit').selectedIndex];

        var index = arrType.indexOf(type);

        // update data array

        arrType[index] = type;
        arrPart_No[index] = part_no;
        arrSpec[index] = spec;
        arrQuantity[index] = quantity;
        arrSupplier_Quotation_No[index] = supplier;
        arrTotal_Value[index] = total_value;
        arrUnit[index] = unit;
        //update data in table edit
        init_edit();

        $('#EditTypeModal').modal('hide');
    });
    $('#edit_proposer').on('change', function () {
        document.getElementById('edit_expected_date').disabled = false;
    });
    $('#edit_quoted_price').on('change', function () {
        var val = document.getElementById('edit_quoted_price').value;
        var newVal = numberWithCommas(val);
        document.getElementById('edit_quoted_price').value = newVal;
    });

    $('#edit_proposer').on('change',function(){
        var value = document.getElementById("edit_proposer").value;
        if (value == ""){
            document.getElementById("edit_expected_date").value = null;
            document.getElementById("edit_expected_date").disabled = true;
        }else{
             document.getElementById("edit_expected_date").disabled = false;
        }
    });

    $('#edit_stages').on('change',function(){
        document.getElementById("edit_stages_update_date").value = new Date().toISOString().split('T')[0];
    });

    $('#edit_sale_name').on('change',function(){
         var name = document.getElementById("edit_sale_name").value;
         $.ajax({
            url: '@Url.Action("GetDepartment", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name
            },
            success: function (response) {
                var department = response;
                document.getElementById("edit_department").value = department;
            }
        });
    });

    $('#edit_product_type').on('change', function () {
        clear_dataall();

        var type = document.getElementById("edit_product_type").value;
         $.ajax({
            url: '@Url.Action("GetType", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                type
            },
            success: function (response) {

                // Enable Add Button
                document.getElementById("btnAddType").disabled = false;

                var data = response;
                 // add Type
                Types = add_type(data);
               // add select type
                $('#types').empty();
                var selectType = document.getElementById('types');
                for (var i = 0, l = Types.length; i < l; i++) {
                    var option = Types[i];
                    selectType.options.add(new Option(option.text, option.value, option.selected));
                }
                document.getElementById('types').selectedIndex = 0;
            }
        });
    });
    function remove_data(index) {
        arrType.splice(index, 1);
        arrPart_No.splice(index, 1);
        arrSpec.splice(index, 1);
        arrQuantity.splice(index, 1);
        arrSupplier_Quotation_No.splice(index, 1);
        arrTotal_Value.splice(index, 1);
        arrUnit.splice(index, 1);

        // update  type
        var type = arrType.join();
        document.getElementById('edit_type').value = type;
    }
    function clear_dataall() {
        document.getElementById("edit_type").value = "";
        arrType = [];
        arrPart_No = [];
        arrSpec = [];
        arrQuantity = [];
        arrSupplier_Quotation_No = [];
        arrTotal_Value = [];
        arrUnit = [];

        init_edit();
    };
    function add_data(type) {
        // fine index data type temp
        var index = arrType.indexOf(type);
        if (index == -1) {
            arrType.push(type);
            arrPart_No.push("");
            arrSpec.push("");
            arrQuantity.push("");
            arrSupplier_Quotation_No.push("");
            arrTotal_Value.push("0");
            arrUnit.push("");
        }
    }
    function add_sale(sales) {
        var data_sales = [];
        for (var i = 0; i < sales.length; i++) {
            var data =
            {
                "text": sales[i],
                "value": sales[i]
            }
            data_sales.push(data);
        }

        return data_sales;
    };
    function add_type(types) {
        var data_types = [];
        for (var i = 0; i < types.length; i++) {
            var data =
            {
                "text": types[i],
                "value": types[i]
            }
            data_types.push(data);
        }

        return data_types;
    };
    function add_department(department) {
        var data_department = [];
        for (var i = 0; i < department.length; i++) {
            var data =
            {
                "text": department[i],
                "value": department[i]
            }
            data_department.push(data);
        }

        return data_department;
    };
    function add_proposer(proposer) {
        var data_proposer = [];
        for (var i = 0; i < proposer.length; i++) {
            var data =
            {
                "text": proposer[i],
                "value": proposer[i]
            }
            data_proposer.push(data);
        }

        return data_proposer;
    };
    function add_customer(customers) {
        var list = document.getElementById('list_customer');

        customers.forEach(function (item) {
            var option = document.createElement('option');
            option.value = item;
            list.appendChild(option);
        });
    };
    function add_enduser(endusers) {
        var list = document.getElementById('list_enduser');

        endusers.forEach(function (item) {
            var option = document.createElement('option');
            option.value = item;
            list.appendChild(option);
        });
    };
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function diffDate(date_start, date_stop) {
        const date1 = new Date(date_start);
        const date2 = new Date(date_stop);
        const diffTime = date2 - date1;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        return diffDays;
    };
    </script>
}
