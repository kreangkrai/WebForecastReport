@model WebForecastReport.Models.UserModel;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Quotation";
}
<style>
    #table tr td:nth-of-type(1),
    #table tr td:nth-of-type(2) {
        cursor: pointer;
    }

    #table_types tr td:nth-of-type(1),
    #table_types tr td:nth-of-type(2) {
        cursor: pointer;
    }

    #table_engineer_in_charge_edit td:nth-of-type(1){
        cursor: pointer;
    }

    td.highlight_yellow {
        background-color: yellow;
    }

    td.highlight_red {
        font-weight: bold;
        color: red;
        background-color: burlywood;
    }
</style>
<div class="row p-3">

    <div class="col-md-12 col-xl-12">
        <div class="row d-flex justify-content-between">
            <div class="col-md-2 col-xl-2 pb-3">
                <button type="button" id="AddQuotation" class="btn btn-primary form-control" style="height:55px">
                    <i class="fas fa-plus" style="font-size:20px"> Quotation</i>
                </button>
            </div>

            <div class="col-md-2 col-xl-2 pb-3">
                <a type="button" class="btn btn-success form-control" style="height:55px;font-size:20px;text-align:center;padding-top:10px" href="@Url.Action("DownloadXlsxReport", "Quotation")">
                    <i class="fas fa-download" style="padding-right:10px"></i>Export
                </a>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <span class="card-title"><b>Quotations</b></span>
            </div>
            <div class="card-body">
                <table id="table" class="table table-xl cell-border table-dark display responsive nowrap" width="100%">
                </table>
            </div>
        </div>
    </div>
</div>

<partial name="Modal" />
<partial name="ModalEdit" />
@section Scripts
{
    <script type="text/javascript">
    var quotation_datas = [];
    var quotation = '';
    var revision = '';
    var date = '';
    var customer = '';
    var enduser = '';
    var project_name = '';
    var site_location = '';
    var product_type = '';
    var type = '';
    var brand = '';
    var part_no = '';
    var spec = '';
    var quantity = '';
    var supplier_quotation_no = '';
    var total_value = '';
    var unit = '';
    var quoted_price = '';
    var expected_order_date = '';
    var old_expected_order_date = '';
    var required_onsite_date = '';
    var proposer = '';

    var expected_date = '';
    var status = '';
    var stages = '';
    var stages_update_date = '';
    var how_to_support = '';
    var competitor = '';
    var competitor_description = '';
    var competitor_price = '';
    var sale_name = '';
    var department = '';
    var detail = '';
    var engineer_in_charge = '';
    var engineer_department = '';

    var arrProductType = [];

    var Units = ["THB", "EUR", "USD", "JPY","CHF","GBP","SGD"];
    var Status = ["IN", "OUT"];
    var Stages = ["Quote for Budget", "Negotiation/Review", "Proposal/Quote for Order", "Prospecting", "Closed(Won)", "Closed(Lost)","No go"];

    var Types = [];
    var Brands = [];
    var Sales = [];
    var Proposers = [];
    var Customers = [];
    var EndUsers = [];
    var Departments = [];
    var arrDepartment = [];
    var Engineers = [];
    var arrEngineer = [];

    var state_admin = false;

    var statepage = false;

    $(document).ready(function () {
        init();
    });

    function init() {
        var name = '@Model.name';
        var role = '@Model.role';
        $.ajax({
            url: '@Url.Action("GetData", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name, role
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                //add sale to select
                Sales = add_sale(response.sales);

                // add proposer
                Proposers = add_proposer(response.proposers);

                //add customer to datalist
                Customers = add_customer(response.customers);

                //add end user to datalist
                EndUsers = add_enduser(response.endusers);

                //add engineer department
                Departments = add_engineer_department(response.engineers);
                Engineers = response.engineers;

                var datas = response.quatations;
                var dataSet = [];
                for (var i = 0; i < datas.length; i++) {
                    var data = ["",
                        "",
                        datas[i].quotation_no,
                        datas[i].revision,
                        datas[i].status,
                        datas[i].date,
                        datas[i].customer,
                        datas[i].enduser,
                        datas[i].project_name,
                        datas[i].site_location,
                        datas[i].product_type,
                        datas[i].type,
                        datas[i].brand,
                        datas[i].part_no,
                        datas[i].spec,
                        datas[i].quantity,
                        datas[i].supplier_quotation_no,
                        datas[i].total_value,
                        datas[i].unit,
                        datas[i].quoted_price,
                        datas[i].expected_order_date,
                        datas[i].required_onsite_date,
                        datas[i].proposer,
                        datas[i].expected_date,
                        datas[i].stages,
                        datas[i].stages_update_date,
                        datas[i].how_to_support,
                        datas[i].competitor,
                        datas[i].competitor_description,
                        datas[i].competitor_price,
                        datas[i].sale_name,
                        datas[i].department,
                        datas[i].detail,
                        datas[i].engineer_in_charge,
                        datas[i].engineer_department];

                    dataSet.push(data);
                }
                quotation_datas = dataSet;

                table(dataSet);
            }
        });
    };
    function init_view() {
        var dataSet = [];
        for (var i = 0; i < arrProductType.length; i++) {
            var data = [arrProductType[i][0].type,arrProductType[i][0].brand, arrProductType[i][0].part_no, arrProductType[i][0].spec, arrProductType[i][0].quantity, arrProductType[i][0].supplier_quotation_no, arrProductType[i][0].total_value, arrProductType[i][0].unit];
            dataSet.push(data);
        }
        table_view(dataSet);
    };
    function init_edit() {
        var dataSet = [];

        for (var i = 0; i < arrProductType.length; i++) {
             var data = [arrProductType[i][0].edit,arrProductType[i][0].delete,arrProductType[i][0].type,arrProductType[i][0].brand, arrProductType[i][0].part_no, arrProductType[i][0].spec, arrProductType[i][0].quantity, arrProductType[i][0].supplier_quotation_no, arrProductType[i][0].total_value, arrProductType[i][0].unit];
             dataSet.push(data);
        }
        table_edit(dataSet);
    };

    function init_engineer_edit() {
            var dataSet = [];

            for (var i = 0; i < arrEngineer.length; i++) {
                var data = [arrEngineer[i][0].delete, arrEngineer[i][0].engineer, arrEngineer[i][0].department];
                dataSet.push(data);
            }
            table_engineer_edit(dataSet);
        };
    function init_engineer_view() {
            var dataSet = [];

            for (var i = 0; i < arrEngineer.length; i++) {
                var data = [arrEngineer[i][0].engineer, arrEngineer[i][0].department];
                dataSet.push(data);
            }
            table_engineer_view(dataSet);
    };
    var tables;
    function table(dataSet) {
        if (tables !== undefined)
            tables.destroy();
        tables = $('#table').DataTable({
            data: dataSet,
            columns: [
                { title: "Edit " },
                { title: "View" },
                { title: "Quotation No" },
                { title: "Revision" },
                { title: "Status" },
                { title: "Quotation Created Date" },
                { title: "Customer" },
                { title: "End User" },
                { title: "Project Name" },
                { title: "Site Location" },
                { title: "Product Type" },
                { title: "Type" },
                { title: "Brand" },
                { title: "Part No" },
                { title: "Spec" },
                { title: "Quantity" },
                { title: "Supplier Quotation No" },
                { title: "Total Value" },
                { title: "Unit" },
                { title: "Quoted Price" },
                { title: "Expected Order Date" },
                { title: "Required Onsite Date" },
                { title: "Proposal Created By" },
                { title: "Proposal Expected Date" },
                { title: "Stages" },
                { title: "Stages Update Date" },
                { title: "How supplier support to win project" },
                { title: "Competitor" },
                { title: "Competitor Description" },
                { title: "Competitor Price(THB)" },
                { title: "Sale Name" },
                { title: "Department" },
                { title: "Detail Project" },
                { title: "Engineer In Charge" },
                { title: "Engineer Department" },
            ],
            "columnDefs": [
                {
                    "targets": 0,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-pen\"></i>",
                    "className": 'dt-body-center',
                },
                {
                    "targets": 1,
                    "data": null,
                    "defaultContent": "<i class=\"fas fa-eye\"></i>",
                    "className": 'dt-body-center'
                },

            ],
            scrollX: true,
            stateSave: statepage,
        });
        $(tables.table().body()).addClass('text-dark');
    }

    var tables_view;
    function table_view(dataSet) {
            setTimeout(function () {
                if (tables_view !== undefined)
                    tables_view.destroy();
                    tables_view = $('#view_table_types').DataTable({
                    data: dataSet,
                    columns: [
                        { title: "Type", width: 80 },
                        { title: "Brand", width: 80 },
                        { title: "Part No", width: 80 },
                        { title: "Spec", width: 80 },
                        { title: "Quantity", width: 80 },
                        { title: "Supplier Quotation No", width: 80 },
                        { title: "Total Value", width: 80 },
                        { title: "Unit", width: 30 },
                    ],
                    "scrollX": true,
                    "paging": false,
                    "searching": false,
                    "bInfo": false,

                });
                $(tables_view.table().body()).addClass('text-dark');
            }, 300);

        };

    var tables_engineer_edit;
    function table_engineer_edit(dataSet) {
            setTimeout(function () {
                if (tables_engineer_edit !== undefined)
                    tables_engineer_edit.destroy();
                tables_engineer_edit = $('#table_engineer_in_charge_edit').DataTable({
                    data: dataSet,
                    columns: [
                        { title: "Delete", width: 5 },
                        { title: "Engineer", width: 120 },
                        { title: "Department", width: 120 },
                    ],
                    "columnDefs": [
                        {
                            "targets": 0,
                            "data": null,
                            "defaultContent": "<i class=\"fas fa-trash\"></i>",
                            "className": 'dt-body-center',
                        },
                    ],
                    "scrollX": true,
                    "paging": false,
                    "searching": false,
                    "bInfo": false,
                });
                $(tables_engineer_edit.table().body()).addClass('text-dark');
            }, 300);
        };

    var tables_engineer_view;
    function table_engineer_view(dataSet) {
            setTimeout(function () {
                if (tables_engineer_view !== undefined)
                    tables_engineer_view.destroy();
                tables_engineer_view = $('#table_engineer_in_charge_view').DataTable({
                    data: dataSet,
                    columns: [
                        { title: "Engineer", width: 120 },
                        { title: "Department", width: 120 },
                    ],
                    "columnDefs": [                        
                    ],
                    "scrollX": true,
                    "paging": false,
                    "searching": false,
                    "bInfo": false,
                });
                $(tables_engineer_view.table().body()).addClass('text-dark');
            }, 300);
    };
    var tables_edit;
    function table_edit(dataSet) {
            setTimeout(function () {
                if (tables_edit !== undefined)
                    tables_edit.destroy();
                tables_edit = $('#table_types').DataTable({
                    data: dataSet,
                    columns: [
                        { title: "Edit", width: 5 },
                        { title: "Delete", width: 5 },
                        { title: "Type", width: 80 },
                        { title: "Brand", width: 80 },
                        { title: "Part No", width: 80 },
                        { title: "Spec", width: 80 },
                        { title: "Quantity", width: 80 },
                        { title: "Supplier Quotation No", width: 80 },
                        { title: "Total Value", width: 80 },
                        { title: "Unit", width: 30 },
                    ],
                    "columnDefs": [
                        {
                            "targets": 0,
                            "data": null,
                            "defaultContent": "<i class=\"fas fa-pen\"></i>",
                            "className": 'dt-body-center',
                        },
                        {
                            "targets": 1,
                            "data": null,
                            "defaultContent": "<i class=\"fas fa-trash\"></i>",
                            "className": 'dt-body-center',
                        },
                        {
                            "targets": [ 4, 5, 6, 7],
                            "visible": false,
                            "searchable": false,
                            "className": 'dt-body-center',

                        }
                    ],
                    "scrollX": true,
                    "paging": false,
                    "searching": false,
                    "bInfo": false,
                    "order": [[2, "asc"]],
                });
                $(tables_edit.table().body()).addClass('text-dark');
            }, 300);
        };


    $('#AddQuotation').on('click', function () {
        var name = '@Model.name';
        var department = '@Model.department';
        var role = '@Model.role';
        $.ajax({
            url: '@Url.Action("GetQuotation", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name,
                department,
                role
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                var datas = response.quotation;
                var dataSet = [];
                for (var i = 0; i < datas.length; i++) {
                    var data = ["",
                        "",
                        datas[i].quotation_no,
                        datas[i].revision,
                        datas[i].status,
                        datas[i].date,
                        datas[i].customer,
                        datas[i].enduser,
                        datas[i].project_name,
                        datas[i].site_location,
                        datas[i].product_type,
                        datas[i].type,
                        datas[i].brand,
                        datas[i].part_no,
                        datas[i].spec,
                        datas[i].quantity,
                        datas[i].supplier_quotation_no,
                        datas[i].total_value,
                        datas[i].unit,
                        datas[i].quoted_price,
                        datas[i].expected_order_date,
                        datas[i].required_onsite_date,
                        datas[i].proposer,
                        datas[i].expected_date,
                        datas[i].stages,
                        datas[i].stages_update_date,
                        datas[i].how_to_support,
                        datas[i].competitor,
                        datas[i].competitor_description,
                        datas[i].competitor_price,
                        datas[i].sale_name,
                        datas[i].department,
                        datas[i].detail,
                        datas[i].engineer_in_charge,
                        datas[i].engineer_department];

                    dataSet.push(data);
                }
                table(dataSet);
            }
        });
    });

    $('#table').on('click', 'tbody td', function () {
        var cell = tables.cell(this);
        var column = cell[0][0].column;
        quotation = cell.data()[2];
        revision = cell.data()[3];
        status = cell.data()[4];
        date = cell.data()[5];
        customer = cell.data()[6];
        enduser = cell.data()[7];
        project_name = cell.data()[8];
        site_location = cell.data()[9];
        product_type = cell.data()[10];
        type = cell.data()[11];
        brand = cell.data()[12];
        part_no = cell.data()[13];
        spec = cell.data()[14];
        quantity = cell.data()[15];
        supplier_quotation_no = cell.data()[16];
        total_value = cell.data()[17];
        unit = cell.data()[18];
        quoted_price = cell.data()[19];
        expected_order_date = cell.data()[20];
        old_expected_order_date = expected_order_date;
        required_onsite_date = cell.data()[21];
        proposer = cell.data()[22];
        expected_date = cell.data()[23];
        stages = cell.data()[24];
        stages_update_date = cell.data()[25];
        how_to_support = cell.data()[26];
        competitor = cell.data()[27];
        competitor_description = cell.data()[28];
        competitor_price = cell.data()[29];
        sale_name = cell.data()[30];
        department = cell.data()[31];
        detail = cell.data()[32];
        engineer_in_charge = cell.data()[33];
        engineer_department = cell.data()[34];

        arrProductType = [];
        arrEngineer = [];

        var count = (brand.match(/\|/g) || []).length;
        for (var i = 0; i <= count; i++) {
            if (brand != "") {
                var _type = type.split('|')[i];
                var _brand = brand.split('|')[i];
                var _part_no = part_no.split('|')[i];
                var _spec = spec.split('|')[i];
                var _quantity = quantity.split('|')[i];
                var _supplier = supplier_quotation_no.split('|')[i];
                var _total_value = total_value.split('|')[i];
                var _unit = unit.split('|')[i];

                arrProductType.push([{"edit":"",
                                        "delete":"",
                                        "type":_type,
                                        "brand":_brand,
                                        "part_no":_part_no,
                                        "spec":_spec,
                                        "quantity":_quantity,
                                        "supplier_quotation_no":_supplier,
                                        "total_value":_total_value,
                                        "unit":_unit}]);
            }
        }

        var count_engineer = (engineer_in_charge.match(/\|/g) || []).length;
        for (var i = 0; i <= count_engineer; i++) {
            if (engineer_in_charge != "") {
                var _engineer_in_charge = engineer_in_charge.split('|')[i];
                var _engineer_department = engineer_department.split('|')[i];

                arrEngineer.push([{
                    "delete": "",
                    "engineer": _engineer_in_charge,
                    "department": _engineer_department
                }]);
            }
        }

        if (column == "0") {

            //clear selection type and disabled button add
            document.getElementById("btnAddType").disabled = true;
            document.getElementById("add_engineer_in_charge").disabled = true;
            document.getElementById("select_engineer_in_charge").value = "";
            document.getElementById("select_engineer_in_charge").disabled = true;

            $('#types').empty();

            document.getElementById('edit_quotation_no').value = quotation;
            document.getElementById('edit_revision').value = revision;
            document.getElementById('edit_date').value = date;
            document.getElementById('edit_customer').value = customer;

            document.getElementById('edit_enduser').value = enduser;

            document.getElementById('edit_project_name').value = project_name;
            document.getElementById('edit_site_location').value = site_location;


            if (product_type == "") {
                document.getElementById("edit_product_type").selectedIndex = 0;
                document.getElementById("edit_product_type").options[0].disabled = true;
            } else {
                document.getElementById('edit_product_type').value = product_type;
            }

            document.getElementById('edit_quoted_price').value = quoted_price;
            document.getElementById('edit_expected_order_date').value = expected_order_date;
            document.getElementById('edit_required_onsite_date').value = required_onsite_date;

            $('#edit_proposer').empty();
            var selectProposer = document.getElementById('edit_proposer');
            for (var i = 0, l = Proposers.length; i < l; i++) {
                var option = Proposers[i];
                selectProposer.options.add(new Option(option.text, option.value, option.selected));
            }
            var index_proposer = Proposers.map(function (e) { return e.value; }).indexOf(proposer);
            document.getElementById('edit_proposer').selectedIndex = index_proposer;

            document.getElementById('edit_expected_date').value = expected_date;

            var proposal = document.getElementById('edit_proposer').value;
            if (proposal != "") {
                document.getElementById('edit_expected_date').disabled = false;
            } else {
                document.getElementById('edit_expected_date').disabled = true;
            }

            document.getElementById('edit_status').value = status;
            var index_status = Status.indexOf(status);
            document.getElementById('edit_status').selectedIndex = index_status;

            document.getElementById('edit_stages').value = stages;
            var index_stages = Stages.indexOf(stages);
            document.getElementById('edit_stages').selectedIndex = index_stages;

            document.getElementById('edit_stages_update_date').value = stages_update_date;
            document.getElementById('edit_how_to_support').value = how_to_support;
            document.getElementById('edit_competitor').value = competitor;
            document.getElementById('edit_competitor_description').value = competitor_description;
            document.getElementById('edit_competitor_price').value = competitor_price;

            $('#edit_sale_name').empty();
            var selectBox = document.getElementById('edit_sale_name');
            for (var i = 0, l = Sales.length; i < l; i++) {
                var option = Sales[i];
                selectBox.options.add(new Option(option.text, option.value, option.selected));
            }
            var index_sale = Sales.map(function (e) { return e.value; }).indexOf(sale_name);
            document.getElementById('edit_sale_name').selectedIndex = index_sale;

            document.getElementById('edit_department').innerHTML = department;


            document.getElementById('edit_detail').value = detail;


            //check state admin
            var role = '@Model.role';
            if (role == "Admin" || role != "") {
                document.getElementById('edit_sale_name').disabled = false;
            } else {
                document.getElementById('edit_sale_name').disabled = true;
            }

            // add select engineer department
            $('#select_engineer_in_charge_department').empty();
            var selectEngineerDepartment = document.getElementById('select_engineer_in_charge_department');
            selectEngineerDepartment.options.add(new Option("Please Select", "Please Select", true));
            for (var i = 0, l = Departments.length; i < l; i++) {
                var option = Departments[i];
                selectEngineerDepartment.options.add(new Option(option.text, option.value, option.selected));
            }
            document.getElementById('select_engineer_in_charge_department').selectedIndex = 0;
            document.getElementById("select_engineer_in_charge_department").options[0].disabled = true;

            //init data table
            init_edit();
            //init data engineer
            init_engineer_edit();

            //get type
            var type = product_type;
            $('#brands').empty();
            $('#types').empty();
            $.ajax({
                url: '@Url.Action("GetType", "Quotation")',
                type: "post",
                contentType: 'application/x-www-form-urlencoded',
                data: {
                    type
                },
                success: function (response) {
                     // hide group type  default=> Please Select
                     chkStateProductType(response);
                }
            });

            $('#EditModal').modal();
        } else if (column == "1") {

            document.getElementById('quotation_no').value = quotation;
            document.getElementById('revision').value = revision;
            document.getElementById('date').value = date;
            document.getElementById('customer').value = customer;
            document.getElementById('enduser').value = enduser;
            document.getElementById('project_name').value = project_name;
            document.getElementById('site_location').value = site_location;
            document.getElementById('product_type').value = product_type;

            document.getElementById('quoted_price').value = quoted_price;
            document.getElementById('expected_order_date').value = expected_order_date;
            document.getElementById('required_onsite_date').value = required_onsite_date;
            document.getElementById('proposer').value = proposer;
            document.getElementById('expected_date').value = expected_date;
            document.getElementById('status').value = status;
            document.getElementById('stages').value = stages;
            document.getElementById('stages_update_date').value = stages_update_date;
            document.getElementById('how_to_support').value = how_to_support;
            document.getElementById('competitor').value = competitor;
            document.getElementById('competitor_description').value = competitor_description;
            document.getElementById('competitor_price').value = competitor_price;
            document.getElementById('sale_name').value = sale_name;

            document.getElementById('department').innerHTML = department;

            document.getElementById('detail').value = detail;

            //init data table view
            init_view();
            init_engineer_view();
            $('#ShowModal').modal();
        }

    });
        $('#table_engineer_in_charge_edit').on('click', 'tbody td', function () {
        var cell = tables_engineer_edit.cell(this);
        var column = cell[0][0].column;

        if (column == "0") {
            var name = cell.data()[1];

            arrEngineer = arrEngineer.filter(function (obj) {
                return obj[0].engineer !== name;
            });

            init_engineer_edit();
        }
    });

    $('#table_types').on('click', 'tbody td', function () {
        var cell = tables_edit.cell(this);
        var column = cell[0][0].column;

        var type = cell.data()[2];
        var brand = cell.data()[3];

        var index = findIndex(arrProductType, type, brand);

        if (column == 0) {
            document.getElementById('edit_sub_type').value = arrProductType[index][0].type;
            document.getElementById('edit_sub_brand').value = arrProductType[index][0].brand;
            document.getElementById('edit_sub_part_no').value = arrProductType[index][0].part_no;
            document.getElementById('edit_sub_spec').value = arrProductType[index][0].spec;
            document.getElementById('edit_sub_quantity').value = arrProductType[index][0].quantity;
            document.getElementById('edit_sub_supplier_quotation_no').value = arrProductType[index][0].supplier_quotation_no;
            document.getElementById('edit_sub_total_value').value = arrProductType[index][0].total_value;
            document.getElementById('edit_sub_unit').value = arrProductType[index][0].unit;

            var unit = arrProductType[index][0].unit;
            var index_unit = Units.indexOf(unit)
            document.getElementById('edit_sub_unit').selectedIndex = index_unit;
            $('#EditTypeModal').modal('show');
        } else if (column == 1) {
            remove_data(index);

            //reload data
            init_edit();
        }

    });
    $('#edit_quotationConfirm').on('click', function () {

        var user = '@Model.name';

        var quotation = document.getElementById('edit_quotation_no').value;
        var revision = document.getElementById('edit_revision').value;
        var date = document.getElementById('edit_date').value;
        var customer = document.getElementById('edit_customer').value;
        var enduser = document.getElementById('edit_enduser').value;
        var project_name = document.getElementById('edit_project_name').value;
        var site_location = document.getElementById('edit_site_location').value;
        var product_type = document.getElementById('edit_product_type').value;

        var arrJoin = joinArray(arrProductType);
        var type = arrJoin[0].type;
        var brand =arrJoin[0].brand;
        var part_no = arrJoin[0].part_no;
        var spec = arrJoin[0].spec;
        var quantity = arrJoin[0].quantity;
        var supplier_quotation_no = arrJoin[0].supplier_quotation_no;
        var total_value = arrJoin[0].total_value;
        var unit = arrJoin[0].unit;

        var quoted_price = document.getElementById('edit_quoted_price').value;
        var expected_order_date = document.getElementById('edit_expected_order_date').value;
        var required_onsite_date = document.getElementById('edit_required_onsite_date').value;
        var proposer = document.getElementById('edit_proposer').value;
        var expected_date = document.getElementById('edit_expected_date').value;
        var status = document.getElementById('edit_status').value;
        var stages = document.getElementById('edit_stages').value;
        var stages_update_date = document.getElementById('edit_stages_update_date').value;
        var how_to_support = document.getElementById('edit_how_to_support').value;
        var competitor = document.getElementById('edit_competitor').value;
        var competitor_description = document.getElementById('edit_competitor_description').value;
        var competitor_price = document.getElementById('edit_competitor_price').value;
        var sale_name = document.getElementById('edit_sale_name').value;
        var department = document.getElementById('edit_department').innerHTML;
        var detail = document.getElementById('edit_detail').value;

        // data engineer in charge
        var arrengineer_in_charge = [];
        var arrengineer_department = [];
        var engineer_in_charge = "";
        var engineer_department = "";

        for (var i = 0; i < arrEngineer.length; i++) {
            arrengineer_in_charge.push(arrEngineer[i][0].engineer);
            arrengineer_department.push(arrEngineer[i][0].department);
        }
        engineer_in_charge = arrengineer_in_charge.join('|');
        engineer_department = arrengineer_department.join('|');

        $.ajax({
            url: '@Url.Action("Update", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                user,quotation, revision, date, customer, enduser, project_name, site_location, product_type, type,brand, part_no, spec, quantity, supplier_quotation_no,
                total_value, unit, quoted_price, expected_order_date, old_expected_order_date, required_onsite_date, proposer, expected_date, status, stages, stages_update_date, how_to_support, competitor,
                competitor_description, competitor_price, sale_name, department, detail, engineer_in_charge, engineer_department
            },
            success: function (response) {
                //get state page
                statepage = response.statepage;

                if (response.message == "Update Success") {
                    location.reload(); //reload page
                    toastr.success("Update Success");
                } else {
                    toastr.error("Update Failed");
                }
            }
        });
            $('#EditModal').modal('hide');
        });
    $('#btnAddType').on('click', function () {

        var type = document.getElementById("types").value;
        var brand = document.getElementById("brands").value;

        if(type == "Please Select"){
            type = "";
        }
        if (brand != ""){
            // add data
            add_data(type,brand);

            init_edit();
         }
    });
        $('#add_engineer_in_charge').on('click', function () {
            var name = document.getElementById("select_engineer_in_charge").value;
            var department = document.getElementById("select_engineer_in_charge_department").value;
            add_engineer_in_charge(name, department);
        });
    $('#clear_btnType').on('click', function () {
        clear_dataall();
        document.getElementById('edit_product_type').value = "";
    });
    $('#edit_btnType').on('click', function () {

        init_edit();

        $('#EditMoreModal').modal();

    });
    $('#edit_TypeConfirm').on('click', function () {
        var type = document.getElementById('edit_sub_type').value;
        var brand = document.getElementById('edit_sub_brand').value;
        var part_no = document.getElementById('edit_sub_part_no').value;
        var spec = document.getElementById('edit_sub_spec').value;
        var quantity = document.getElementById('edit_sub_quantity').value;
        var supplier = document.getElementById('edit_sub_supplier_quotation_no').value;
        var total_value = document.getElementById('edit_sub_total_value').value;
        var unit = Units[document.getElementById('edit_sub_unit').selectedIndex];

        var index = findIndex(arrProductType,type,brand);

        // update data array
        arrProductType[index][0].type = type;
        arrProductType[index][0].brand = brand;
        arrProductType[index][0].part_no = part_no;
        arrProductType[index][0].spec = spec;
        arrProductType[index][0].quantity = quantity;
        arrProductType[index][0].supplier_quotation_no = supplier;
        arrProductType[index][0].total_value = total_value;
        arrProductType[index][0].unit = unit;

        //update data in table edit
        init_edit();

        $('#EditTypeModal').modal('hide');
    });
    $('#edit_proposer').on('change', function () {
        document.getElementById('edit_expected_date').disabled = false;
    });
    $('#edit_quoted_price').on('change', function () {
            var val = document.getElementById('edit_quoted_price').value;
            var newVal = numberWithCommas(val);
            document.getElementById('edit_quoted_price').value = newVal;
    });
    $('#edit_competitor_price').on('change', function () {
            var val = document.getElementById('edit_competitor_price').value;
            var newVal = numberWithCommas(val);
            document.getElementById('edit_competitor_price').value = newVal;
    });
    $('#edit_sub_total_value').on('change', function () {
            var val = document.getElementById('edit_sub_total_value').value;
            var newVal = numberWithCommas(val);
            document.getElementById('edit_sub_total_value').value = newVal;
    });
    $('#edit_proposer').on('change',function(){
        var value = document.getElementById("edit_proposer").value;
        if (value == ""){
            document.getElementById("edit_expected_date").value = null;
            document.getElementById("edit_expected_date").disabled = true;
        }else{
             document.getElementById("edit_expected_date").disabled = false;
        }
    });

    $('#select_engineer_in_charge_department').on('change', function () {
        document.getElementById("select_engineer_in_charge").disabled = false;
        var department = document.getElementById("select_engineer_in_charge_department").value;
        var engineer = Engineers.filter(f => f.department === department).map(m => m.name);
      
        var engineers = add_engineer(engineer);

        // add select engineer department
            $('#select_engineer_in_charge').empty();
            var selectEngineer = document.getElementById('select_engineer_in_charge');
            for (var i = 0, l = engineers.length; i < l; i++) {
                var option = engineers[i];
                selectEngineer.options.add(new Option(option.text, option.value, option.selected));
            }
            document.getElementById('select_engineer_in_charge').selectedIndex = 0;
            document.getElementById("add_engineer_in_charge").disabled = false;
          
    });

    $('#edit_stages').on('change',function(){
        document.getElementById("edit_stages_update_date").value = new Date().toISOString().split('T')[0];
    });

    $('#edit_sale_name').on('change',function(){
         var name = document.getElementById("edit_sale_name").value;
         $.ajax({
            url: '@Url.Action("GetDepartment", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                name
            },
            success: function (response) {
                var department = response;
                document.getElementById("edit_department").innerHTML = department;
            }
         });
    });

    $('#edit_product_type').on('change', function () {

        clear_dataall();
        $('#types').empty();
        $('#brands').empty();
        var type = document.getElementById("edit_product_type").value;
        $.ajax({
            url: '@Url.Action("GetType", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                type
            },
            success: function (response) {
                // hide group type  default=> Please Select
                chkStateProductType(response);
            }
        });
    });
    $('#types').on('change',function(){
         var type = document.getElementById("edit_product_type").value;
         $.ajax({
            url: '@Url.Action("GetBrand", "Quotation")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: {
                type
            },
            success: function (response) {
                //disable button
                document.getElementById("btnAddType").disabled = true;

                var data = response;
                 // add Brand
                Brands = add_brand(data);
               // add select type
                $('#brands').empty();
                var selectBrand = document.getElementById('brands');
                for (var i = 0, l = Brands.length; i < l; i++) {
                    var option = Brands[i];
                    selectBrand.options.add(new Option(option.text, option.value, option.selected));
                }
                document.getElementById('brands').selectedIndex = 0;
                document.getElementById("brands").options[0].disabled = true;
            }
         });
    });
    $('#brands').on('change',function(){
        document.getElementById("btnAddType").disabled = false;
    });
    $('#info_status').on('click',function(){
        document.getElementById("info_title").innerHTML = "Status";
        var arr = ["<b>IN</b> : คิดว่าจะได้งานแน่ๆ มีโอกาสจะได้งาน หรือ Target project","<b>OUT</b> : อาจจะไม่ได้งาน หรือไม่ใช่ Target project"];
        add_info(arr);

        $('#ShowInfoModal').modal('show');
    });
    $('#info_stages').on('click',function(){
        document.getElementById("info_title").innerHTML = "Stages";
        var arr = ["<b>Quote for Budget</b> : เสนอราคาให้ลูกค้าดูงบประมาณ",
        "<b>Negotiation/Review</b> : เจรจาเรื่องรายละเอียด Spec ลูกค้า",
        "<b>Proposal/Quote for Order</b> : นำเสนอราคาและ Solution ตามที่ได้คุยกับลูกค้า (งบลูกค้าต้องผ่านแล้ว)",
        "<b>Prospecting</b> : นำเสนองานและคาดว่าจะได้งาน",
        "<b>Closed (Won)</b> : ได้งาน",
        "<b>Closed (Lost)</b> : ไม่ได้งาน",
        "<b>No go</b> : ปิดไม่ไปต่อ (งบประมาณลูกค้าไม่ผ่าน)"]
        add_info(arr);

        $('#ShowInfoModal').modal('show');
    });
    $('#info_expected_order_date').on('click',function(){
        document.getElementById("info_title").innerHTML = "Expected Order Date";
        var arr = ["วันที่คาดว่าจะได้รับ PO"];
        add_info(arr);

        $('#ShowInfoModal').modal('show');
    });
    $('#info_required_onsite_date').on('click',function(){
        document.getElementById("info_title").innerHTML = "Required Onsite Date";
        var arr = ["วันที่ลูกค้าต้องการสินค้า"];
        add_info(arr);

        $('#ShowInfoModal').modal('show');
    });
    function add_info(arr){
        var div = "";
        for (var i=0;i<arr.length;i++){
            div += '<span>' + arr[i] + '</span> <br>';
        }
        document.querySelector('#divinfo').innerHTML = div;
    };
    function remove_data(index) {
        arrProductType.splice(index, 1);
    };
    function clear_dataall() {
        arrProductType = [];

        init_edit();
    };
    function add_data(type,brand) {
        // fine index data type temp
         var index = findIndex(arrProductType,type,brand);

        // auto unit
        var unit = "";
        if (brand == "ABB" || brand == "DEHN" || brand == "Kobold"){
            unit = "THB";
        }else if(brand == "Canty" || brand == "Extrel" || brand =="Servomex"){
            unit = "USD";
        }else if(brand == "HK" || brand == "Kemtrak" || brand == "Knick" || brand == "LAR" || brand == "MRU" || brand == "Scan" || brand =="Stahl" || brand == "Vaisala"){
            unit = "EUR";
        }else if(brand == "Matsushima" || brand == "M-System"){
            unit = "JPY";
        }else if(brand == "Swan"){
            unit = "CHF";
        }else if(brand == "Yamari"){
            unit = "SGD";
        }
        if (index == -1 ) {
            arrProductType.push([{"edit":"",
            "delete":"",
            "type":type,
            "brand":brand,
            "part_no":"",
            "spec":"",
            "quantity":"",
            "supplier_quotation_no":"",
            "total_value":"0",
            "unit":unit}]);
        }
    }
    function add_sale(sales) {
        var data_sales = [];
        for (var i = 0; i < sales.length; i++) {
            var data =
            {
                "text": sales[i],
                "value": sales[i]
            }
            data_sales.push(data);
        }

        return data_sales;
    };
    function add_type(types) {
        var data_types = [];
        for (var i = 0; i < types.length; i++) {
            var data =
            {
                "text": types[i],
                "value": types[i]
            }
            data_types.push(data);
        }

        return data_types;
    };
    function add_brand(brands) {
        var data_brands = [];
        for (var i = 0; i < brands.length; i++) {
            var data =
            {
                "text": brands[i],
                "value": brands[i]
            }
            data_brands.push(data);
        }

        return data_brands;
    };
    function add_proposer(proposer) {
        var data_proposer = [];
        for (var i = 0; i < proposer.length; i++) {
            var data =
            {
                "text": proposer[i],
                "value": proposer[i]
            }
            data_proposer.push(data);
        }

        return data_proposer;
    };
    function add_customer(customers) {
        var list = document.getElementById('list_customer');

        customers.forEach(function (item) {
            var option = document.createElement('option');
            option.value = item;
            list.appendChild(option);
        });
    };
    function add_enduser(endusers) {
        var list = document.getElementById('list_enduser');

        endusers.forEach(function (item) {
            var option = document.createElement('option');
            option.value = item;
            list.appendChild(option);
        });
    };
    function add_engineer(engineers) {
        var data_engineers = [];
        for (var i = 0; i < engineers[0].length; i++) {
            var data =
            {
                "text": engineers[0][i],
                "value": engineers[0][i]
            }
            data_engineers.push(data);
        }
        return data_engineers;
    };
    function add_engineer_department(departments) {
        var data_departments = [];
        for (var i = 0; i < departments.length; i++) {
            var data =
            {
                "text": departments[i].department,
                "value": departments[i].department
            }
            data_departments.push(data);
        }

        return data_departments;
    };

    function numberWithCommas(x) {
        //check digit number and comma
        var is_digit = (/^[0-9]+(?:\.[0-9]+)?$/g.test(x));
        if (is_digit){
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",").trim();
        }else{
            return '0';
        }
    };
    function diffDate(date_start, date_stop) {
        const date1 = new Date(date_start);
        const date2 = new Date(date_stop);
        const diffTime = date2 - date1;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        return diffDays;
    };
    function findIndex(arr,type,brand){
        var index = -1;
        for(var i=0;i<arr.length;i++){
            if(arr[i][0].type == type && arr[i][0].brand == brand){
                index = i;
                break;
            }
        }
        return index;
    };
    function joinArray(array){
        var arr = [];
        var arrType = [];
        var arrBrand = [];
        var arrPart_No = [];
        var arrSpec = [];
        var arrQuantity = [];
        var arrSupplier = [];
        var arrTotal = [];
        var arrUnit = [];

        for(var i=0;i<array.length;i++){
            arrType.push(array[i][0].type);
            arrBrand.push(array[i][0].brand);
            arrPart_No.push(array[i][0].part_no);
            arrSpec.push(array[i][0].spec);
            arrQuantity.push(array[i][0].quantity);
            arrSupplier.push(array[i][0].supplier_quotation_no);
            arrTotal.push(array[i][0].total_value);
            arrUnit.push(array[i][0].unit);
        }
        arr = [{"type": arrType.join('|'),
        "brand": arrBrand.join('|'),
        "part_no" : arrPart_No.join('|'),
        "spec" : arrSpec.join('|'),
        "quantity":arrQuantity.join('|'),
        "supplier_quotation_no":arrSupplier.join('|'),
        "total_value":arrTotal.join('|'),
        "unit":arrUnit.join('|')}]
        return arr;
    };
    function chkStateProductType(response){
        if (response.length == 1) {
                    document.getElementById("group_types").hidden = true;

                    var type = document.getElementById("edit_product_type").value;
                    $.ajax({
                        url: '@Url.Action("GetBrand", "Quotation")',
                        type: "post",
                        contentType: 'application/x-www-form-urlencoded',
                        data: {
                            type
                        },
                        success: function (response) {
                            //disable button
                            document.getElementById("btnAddType").disabled = true;

                            var data = response;
                            // add Brand
                            Brands = add_brand(data);
                            // add select type

                            var selectBrand = document.getElementById('brands');
                            for (var i = 0, l = Brands.length; i < l; i++) {
                                var option = Brands[i];
                                selectBrand.options.add(new Option(option.text, option.value, option.selected));
                            }
                            document.getElementById('brands').selectedIndex = 0;
                            document.getElementById("brands").options[0].disabled = true;
                        }
                    });
                } else {
                    document.getElementById("group_types").hidden = false;

                    // Disable Add Button
                    document.getElementById("btnAddType").disabled = true;

                    var data = response;
                    // add Type
                    Types = add_type(data);
                    // add select type

                    var selectType = document.getElementById('types');
                    for (var i = 0, l = Types.length; i < l; i++) {
                        var option = Types[i];
                        selectType.options.add(new Option(option.text, option.value, option.selected));
                    }
                    document.getElementById('types').selectedIndex = 0;
                    document.getElementById("types").options[0].disabled = true;
                }
    };
    function add_engineer_in_charge(name, department) {
                    
            var chkName = false;
            for (var i = 0; i < arrEngineer.length; i++) {
                if (arrEngineer[i][0].engineer == name) {
                    chkName = true;
                    break;
                }
            }
            if (chkName === false && name !== "") {
                arrEngineer.push([{
                    "delete": "",
                    "engineer": name,
                    "department": department
                }]);
                //init table engineer
                init_engineer_edit();
        }
    };
    </script>
}
