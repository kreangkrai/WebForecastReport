@using Microsoft.AspNetCore.Http
@model WebForecastReport.Models.UserModel;
@{
    ViewData["Title"] = "Tasks";
}
<div class="row p-3">
    @if (Model.role == "Admin")
    {
        <div class="col-xl-1 col-lg-2 col-md-4 col-sm-4 pb-3">
            <button id="btn_add" type="button" class="btn btn-primary form-control elevation-1">
                <i class="fas fa-plus"></i> Create Task
            </button>
        </div>
    }
    <div class="col-xl-1 col-lg-2 col-md-4 col-sm-4 pb-3" hidden>
        <button id="btn_import" type="button" class="btn btn-primary form-control elevation-1">
            <i class="fas fa-upload"></i> Import
        </button>
    </div>
    <div class="col-xl-1 col-lg-2 col-md-4 col-sm-4 pb-3" hidden>
        <button id="btn_export" type="button" class="btn btn-primary form-control elevation-1">
            <i class="fas fa-download"></i> Export
        </button>
    </div>
    <div class="col-xl-9">

    </div>
    <!-- Office Tasks Table -->
    <div class="col-xl-6">
        <div class="card card-dark">
            <div class="card-header">
                <span class="card-title"><i class="fas fa-building"></i> Office Tasks</span>
            </div>
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <table id="table_office" class="table table-sm compact border table-striped table-hover w-100">
                            <thead class="text-center">
                                <tr>
                                    <th style="width:20%">Task ID</th>
                                    <th style="width:auto">Task Name</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot class="text-center">
                                <tr>
                                    <th>Task ID</th>
                                    <th>Task Name</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Site Tasks Table -->
    <div class="col-xl-6">
        <div class="card card-dark">
            <div class="card-header">
                <span class="card-title"><i class="fas fa-industry"></i> Site Tasks</span>
            </div>
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <table id="table_site" class="table table-sm compact border table-striped table-hover w-100">
                            <thead class="text-center">
                                <tr>
                                    <th style="width:20%">Task ID</th>
                                    <th style="width:auto">Task Name</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot class="text-center">
                                <tr>
                                    <th>Task ID</th>
                                    <th>Task Name</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_task" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title">Add Task</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div id="location_group" class="form-group">
                        <label for="task_location">Location</label>
                        <select id="task_location" class="form-control"></select>
                    </div>
                    <div class="form-group">
                        <label for="task_id">Task ID</label>
                        <input id="task_id" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="task_name">Task Name</label>
                        <input id="task_name" type="text" class="form-control" placeholder="Task Name" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        //Variable Declaration
        var tasks = [];
        var office_tasks = [];
        var site_tasks = [];
        var table_office;
        var table_site;
        var update = false;

        //Change these variable to true for log response
        var debug_tasks = false;
        var debug_office_tasks = false;
        var debug_site_tasks = false;
        var debug_create = false;

        $(document).ready(async function () {
            await GetAllTasks();
            await GetOfficeTasks();
            await GetSiteTasks();
        });

        async function GetAllTasks() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllTasks", "Tasks")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    tasks = response;
                    if (debug_tasks) {
                        console.log("All Tasks");
                        console.log(tasks);
                    }
                }
            });
        };

        async function GetOfficeTasks() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetOfficeTasks", "Tasks")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    office_tasks = response;
                    if (debug_office_tasks) {
                        console.log("Office Tasks");
                        console.log(office_tasks);
                    }
                    GenerateOfficeTable(office_tasks);
                }
            });
        };

        async function GetSiteTasks() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetSiteTasks", "Tasks")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    site_tasks = response;
                    if (debug_site_tasks) {
                        console.log("Site Tasks");
                        console.log(site_tasks);
                    }
                    GenerateSiteTable(site_tasks);
                }
            });
        };

        function GenerateOfficeTable(tasks) {
            var datas = [];

            if (table_office != null) {
                table_office.destroy();
            }

            for (var i = 0; i < tasks.length; i++) {
                datas.push([
                    tasks[i].task_id,
                    tasks[i].task_name,
                ]);
            }

            table_office = $('#table_office').DataTable({
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                data: datas,
                columnDefs: [
                    {
                        targets: [0],
                        className: "text-center"
                    }
                ]
            });
        };

        function GenerateSiteTable(tasks) {
            var datas = [];

            if (table_site != null) {
                table_site.destroy();
            }

            for (var i = 0; i < tasks.length; i++) {
                datas.push([
                    tasks[i].task_id,
                    tasks[i].task_name,
                ]);
            }

            table_site = $('#table_site').DataTable({
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                data: datas,
                columnDefs: [
                    {
                        targets: [0],
                        className: "text-center"
                    }
                ]
            });
        };

        $('#btn_add').on('click', function () {
            update = false;
            $('#modal_task').modal();
            $('#modal_title').text("Create Task");
            $('#location_group').show();
            $('#task_location').empty();
            var loc_str = '<option value="" selected disabled>Please Select Location</option>';
            loc_str += '<option value="O">Office</option>';
            loc_str += '<option value="S">Site</option>';
            $('#task_location').append(loc_str);
            $('#task_id').attr('disabled', true);
            $('#task_id').val(null);
            $('#task_name').val(null);
            $('#btn_save').attr('disabled', true);
        });

        $('#task_location').on('change', function () {
            var prefix = $('#task_location').val();
            var arr = tasks.filter(f => (f.task_id.substring(0, 1) === prefix) && (f.task_id.substring(1) !== "999"));
            var task_index = parseInt(arr[arr.length - 1].task_id.substring(1)) + 1;
            var task_id = prefix + task_index.toString().padStart(3,0);
            $('#task_id').val(task_id);
        });

        $('#task_name').on('change', function () {
            var task_id = $('#task_id').val();
            var task_name = $('#task_name').val();
            var enable_save = 1;
            enable_save *= (task_id !== "") ? 1 : 0;
            enable_save *= (task_name !== "") ? 1 : 0;
            $('#btn_save').attr('disabled', !enable_save);
        });

        $('#table_office tbody').on('click', 'tr', function () {
            EditTask(table_office.row(this).data());
        });

        $('#table_site tbody').on('click', 'tr', function () {
            EditTask(table_site.row(this).data());
        });

        function EditTask(data) {
            var admin = '@Model.role' === "Admin" ? true : false;
            if (admin) {
                update = true;
                var task_id = data[0];
                var task_name = data[1];
                $('#modal_task').modal();
                $('#modal_title').text("Edit Task");
                $('#location_group').hide();
                $('#task_id').val(task_id);
                $('#task_id').attr('disabled', true);
                $('#task_name').val(task_name);
            }
        }

        $('#btn_save').on('click', function () {
            var task_id = $('#task_id').val();
            var task_name = $('#task_name').val();

            if (debug_create) {
                console.log("Task ID: " + task_id);
                console.log("Task Name: " + task_name);
            }

            var task_string = JSON.stringify({
                "task_id": task_id,
                "task_name": task_name,
            });

            if (update) {
                UpdateTask(task_string);
            }
            else {
                CreateTask(task_string);
            }
        });

        async function CreateTask(task_string) {
            await $.ajax({
                type: "POST",
                url: '@Url.Action("AddTask", "Tasks")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    task_string
                },
                success: function (response) {
                    if (response == "Success")
                        location.reload();
                    else
                        alert(response);
                }
            });
        };

        async function UpdateTask(task_string) {
            await $.ajax({
                type: "PATCH",
                url: '@Url.Action("UpdateTask", "Tasks")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    task_string
                },
                success: function (response) {
                    if (response == "Success")
                        location.reload();
                    else
                        alert(response);
                }
            });
        };

    </script>
}